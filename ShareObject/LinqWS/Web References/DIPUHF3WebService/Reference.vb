'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34014
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
'
Namespace DIPUHF3WebService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WebServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CheckAuthorizeGroupScreenByUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadAuthorizeGroupMapOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadUserByDepartmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadUserDeaprtByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadMapGridDesktopAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetImageFloorPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadFloorPlanByFloorAndRoomOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadGridLayoutActiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRoomDetailByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveCurrentInRoomOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadOfficerRoomByRoomIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadFloorPlanByRoomIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadOfficerMapLayoutByLayoutIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveMapGridOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSpeedWayReadAreaAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSpeedWayByRoomIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadAntennaBySpeedwayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadAttenaMapLayoutByPortOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadAntennaPlanByRoomIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveMapAntennaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSysConfigOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveSysconfigOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadDesktopAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDesktopByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveDesktopOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDesktopOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadDepartmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadDepartmentByUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSinageScheduleAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSinageScheduleIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadMonthByDigitalSinageTemplateScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadDayByDigitalSinageTemplateScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSinageScheduleDailyByTemplateIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSinageScheduleWeeklyByTemplateIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSinageScheduleTimeByTemplateIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveSinageScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSinageScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadFloorAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadFloorByFloorPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadFloorByDesktopOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadFloorBySpeedwayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadFloorByLEDTVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadFloorPlanAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFloorPlanByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveFloorPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFloorPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadGridLayoutAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGridLayoutByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveGridLayoutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteGridLayoutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadLEDTVAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadLEDTVIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveLEDTVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteLEDTVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadLEDTVBySinageScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadLEDTVIDBySinageContentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadObjectveBySpeedwayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadPatentTypeAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPatentTypeByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SavePatentTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletePatentTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadPositionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadPositionByUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadTitleAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadTitleByUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadRoomAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadRoomByFloorPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadRoomByDesktopOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadRoomByFloorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadRoomBySpeedwayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadUserAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadUserByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSignageContentByLEDTVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSignageContentBySignageScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSpeedwayAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSpeedwayByIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveSpeedwayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSpeedwayDefaultMaxGPIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSpeedwayDefaultMaxAntOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSpeedwayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSearchModeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadFilterModeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadReportModeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadAutoStartModeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadGPILevelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadAutoStopModeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadMemoryBankOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadFilterOpOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSpeedwayAntennaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSpeedwayGPIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadSpeedwayTagFilterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserMapAuthorizeGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNotUserMapAuthorizeGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadUserAll2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadGroupPermissionAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveAuthorizeGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveGroupUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteGroupUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadAuthorizeGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAuthorizeGroupMapOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.LinqWS.My.MySettings.Default.LinqWS_DIPUHF3WebService_WebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CheckAuthorizeGroupScreenByUserCompleted As CheckAuthorizeGroupScreenByUserCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadAuthorizeGroupMapCompleted As LoadAuthorizeGroupMapCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadUserByDepartmentCompleted As LoadUserByDepartmentCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadUserDeaprtByNameCompleted As LoadUserDeaprtByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadMapGridDesktopAllCompleted As LoadMapGridDesktopAllCompletedEventHandler
        
        '''<remarks/>
        Public Event GetImageFloorPlanCompleted As GetImageFloorPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadFloorPlanByFloorAndRoomCompleted As LoadFloorPlanByFloorAndRoomCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadGridLayoutActiveCompleted As LoadGridLayoutActiveCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRoomDetailByIdCompleted As GetRoomDetailByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveCurrentInRoomCompleted As SaveCurrentInRoomCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadOfficerRoomByRoomIdCompleted As LoadOfficerRoomByRoomIdCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadFloorPlanByRoomIdCompleted As LoadFloorPlanByRoomIdCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadOfficerMapLayoutByLayoutIdCompleted As LoadOfficerMapLayoutByLayoutIdCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveMapGridCompleted As SaveMapGridCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSpeedWayReadAreaAllCompleted As LoadSpeedWayReadAreaAllCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSpeedWayByRoomIdCompleted As LoadSpeedWayByRoomIdCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadAntennaBySpeedwayCompleted As LoadAntennaBySpeedwayCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadAttenaMapLayoutByPortCompleted As LoadAttenaMapLayoutByPortCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadAntennaPlanByRoomIdCompleted As LoadAntennaPlanByRoomIdCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveMapAntennaCompleted As SaveMapAntennaCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSysConfigCompleted As LoadSysConfigCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveSysconfigCompleted As SaveSysconfigCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadDesktopAllCompleted As LoadDesktopAllCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDesktopByIdCompleted As GetDesktopByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveDesktopCompleted As SaveDesktopCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDesktopCompleted As DeleteDesktopCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadDepartmentCompleted As LoadDepartmentCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadDepartmentByUserCompleted As LoadDepartmentByUserCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSinageScheduleAllCompleted As LoadSinageScheduleAllCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSinageScheduleIDCompleted As LoadSinageScheduleIDCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadMonthByDigitalSinageTemplateScheduleCompleted As LoadMonthByDigitalSinageTemplateScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadDayByDigitalSinageTemplateScheduleCompleted As LoadDayByDigitalSinageTemplateScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSinageScheduleDailyByTemplateIDCompleted As LoadSinageScheduleDailyByTemplateIDCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSinageScheduleWeeklyByTemplateIDCompleted As LoadSinageScheduleWeeklyByTemplateIDCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSinageScheduleTimeByTemplateIDCompleted As LoadSinageScheduleTimeByTemplateIDCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveSinageScheduleCompleted As SaveSinageScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSinageScheduleCompleted As DeleteSinageScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadFloorAllCompleted As LoadFloorAllCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadFloorByFloorPlanCompleted As LoadFloorByFloorPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadFloorByDesktopCompleted As LoadFloorByDesktopCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadFloorBySpeedwayCompleted As LoadFloorBySpeedwayCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadFloorByLEDTVCompleted As LoadFloorByLEDTVCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadFloorPlanAllCompleted As LoadFloorPlanAllCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFloorPlanByIdCompleted As GetFloorPlanByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveFloorPlanCompleted As SaveFloorPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFloorPlanCompleted As DeleteFloorPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadGridLayoutAllCompleted As LoadGridLayoutAllCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGridLayoutByIdCompleted As GetGridLayoutByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveGridLayoutCompleted As SaveGridLayoutCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteGridLayoutCompleted As DeleteGridLayoutCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadLEDTVAllCompleted As LoadLEDTVAllCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadLEDTVIDCompleted As LoadLEDTVIDCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveLEDTVCompleted As SaveLEDTVCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteLEDTVCompleted As DeleteLEDTVCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadLEDTVBySinageScheduleCompleted As LoadLEDTVBySinageScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadLEDTVIDBySinageContentCompleted As LoadLEDTVIDBySinageContentCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadObjectveBySpeedwayCompleted As LoadObjectveBySpeedwayCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadPatentTypeAllCompleted As LoadPatentTypeAllCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPatentTypeByIdCompleted As GetPatentTypeByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event SavePatentTypeCompleted As SavePatentTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletePatentTypeCompleted As DeletePatentTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadPositionCompleted As LoadPositionCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadPositionByUserCompleted As LoadPositionByUserCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadTitleAllCompleted As LoadTitleAllCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadTitleByUserCompleted As LoadTitleByUserCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadRoomAllCompleted As LoadRoomAllCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadRoomByFloorPlanCompleted As LoadRoomByFloorPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadRoomByDesktopCompleted As LoadRoomByDesktopCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadRoomByFloorCompleted As LoadRoomByFloorCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadRoomBySpeedwayCompleted As LoadRoomBySpeedwayCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadUserAllCompleted As LoadUserAllCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadUserByNameCompleted As LoadUserByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserByIdCompleted As GetUserByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveUserCompleted As SaveUserCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUserCompleted As DeleteUserCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSignageContentByLEDTVCompleted As LoadSignageContentByLEDTVCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSignageContentBySignageScheduleCompleted As LoadSignageContentBySignageScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSpeedwayAllCompleted As LoadSpeedwayAllCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSpeedwayByIDCompleted As LoadSpeedwayByIDCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveSpeedwayCompleted As SaveSpeedwayCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSpeedwayDefaultMaxGPICompleted As GetSpeedwayDefaultMaxGPICompletedEventHandler
        
        '''<remarks/>
        Public Event GetSpeedwayDefaultMaxAntCompleted As GetSpeedwayDefaultMaxAntCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSpeedwayCompleted As DeleteSpeedwayCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSearchModeCompleted As LoadSearchModeCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadFilterModeCompleted As LoadFilterModeCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadReportModeCompleted As LoadReportModeCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadAutoStartModeCompleted As LoadAutoStartModeCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadGPILevelCompleted As LoadGPILevelCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadAutoStopModeCompleted As LoadAutoStopModeCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadMemoryBankCompleted As LoadMemoryBankCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadFilterOpCompleted As LoadFilterOpCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSpeedwayAntennaCompleted As LoadSpeedwayAntennaCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSpeedwayGPICompleted As LoadSpeedwayGPICompletedEventHandler
        
        '''<remarks/>
        Public Event LoadSpeedwayTagFilterCompleted As LoadSpeedwayTagFilterCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserMapAuthorizeGroupCompleted As GetUserMapAuthorizeGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNotUserMapAuthorizeGroupCompleted As GetNotUserMapAuthorizeGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadUserAll2Completed As LoadUserAll2CompletedEventHandler
        
        '''<remarks/>
        Public Event LoadGroupPermissionAllCompleted As LoadGroupPermissionAllCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveAuthorizeGroupCompleted As SaveAuthorizeGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveGroupCompleted As SaveGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveGroupUserCompleted As SaveGroupUserCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteGroupCompleted As DeleteGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteGroupUserCompleted As DeleteGroupUserCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadAuthorizeGroupCompleted As LoadAuthorizeGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAuthorizeGroupMapCompleted As GetAuthorizeGroupMapCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckAuthorizeGroupScreenByUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckAuthorizeGroupScreenByUser(ByVal userid As String, ByVal screenid As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckAuthorizeGroupScreenByUser", New Object() {userid, screenid})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckAuthorizeGroupScreenByUserAsync(ByVal userid As String, ByVal screenid As String)
            Me.CheckAuthorizeGroupScreenByUserAsync(userid, screenid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckAuthorizeGroupScreenByUserAsync(ByVal userid As String, ByVal screenid As String, ByVal userState As Object)
            If (Me.CheckAuthorizeGroupScreenByUserOperationCompleted Is Nothing) Then
                Me.CheckAuthorizeGroupScreenByUserOperationCompleted = AddressOf Me.OnCheckAuthorizeGroupScreenByUserOperationCompleted
            End If
            Me.InvokeAsync("CheckAuthorizeGroupScreenByUser", New Object() {userid, screenid}, Me.CheckAuthorizeGroupScreenByUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckAuthorizeGroupScreenByUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckAuthorizeGroupScreenByUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckAuthorizeGroupScreenByUserCompleted(Me, New CheckAuthorizeGroupScreenByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAuthorizeGroupMap", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadAuthorizeGroupMap(ByVal groupid As String) As String
            Dim results() As Object = Me.Invoke("LoadAuthorizeGroupMap", New Object() {groupid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadAuthorizeGroupMapAsync(ByVal groupid As String)
            Me.LoadAuthorizeGroupMapAsync(groupid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadAuthorizeGroupMapAsync(ByVal groupid As String, ByVal userState As Object)
            If (Me.LoadAuthorizeGroupMapOperationCompleted Is Nothing) Then
                Me.LoadAuthorizeGroupMapOperationCompleted = AddressOf Me.OnLoadAuthorizeGroupMapOperationCompleted
            End If
            Me.InvokeAsync("LoadAuthorizeGroupMap", New Object() {groupid}, Me.LoadAuthorizeGroupMapOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadAuthorizeGroupMapOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadAuthorizeGroupMapCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadAuthorizeGroupMapCompleted(Me, New LoadAuthorizeGroupMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadUserByDepartment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadUserByDepartment(ByVal name As String, ByVal department_id As String) As String
            Dim results() As Object = Me.Invoke("LoadUserByDepartment", New Object() {name, department_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadUserByDepartmentAsync(ByVal name As String, ByVal department_id As String)
            Me.LoadUserByDepartmentAsync(name, department_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadUserByDepartmentAsync(ByVal name As String, ByVal department_id As String, ByVal userState As Object)
            If (Me.LoadUserByDepartmentOperationCompleted Is Nothing) Then
                Me.LoadUserByDepartmentOperationCompleted = AddressOf Me.OnLoadUserByDepartmentOperationCompleted
            End If
            Me.InvokeAsync("LoadUserByDepartment", New Object() {name, department_id}, Me.LoadUserByDepartmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadUserByDepartmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadUserByDepartmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadUserByDepartmentCompleted(Me, New LoadUserByDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadUserDeaprtByName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadUserDeaprtByName(ByVal name As String, ByVal department_id As String) As String
            Dim results() As Object = Me.Invoke("LoadUserDeaprtByName", New Object() {name, department_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadUserDeaprtByNameAsync(ByVal name As String, ByVal department_id As String)
            Me.LoadUserDeaprtByNameAsync(name, department_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadUserDeaprtByNameAsync(ByVal name As String, ByVal department_id As String, ByVal userState As Object)
            If (Me.LoadUserDeaprtByNameOperationCompleted Is Nothing) Then
                Me.LoadUserDeaprtByNameOperationCompleted = AddressOf Me.OnLoadUserDeaprtByNameOperationCompleted
            End If
            Me.InvokeAsync("LoadUserDeaprtByName", New Object() {name, department_id}, Me.LoadUserDeaprtByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadUserDeaprtByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadUserDeaprtByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadUserDeaprtByNameCompleted(Me, New LoadUserDeaprtByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadMapGridDesktopAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadMapGridDesktopAll() As String
            Dim results() As Object = Me.Invoke("LoadMapGridDesktopAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadMapGridDesktopAllAsync()
            Me.LoadMapGridDesktopAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadMapGridDesktopAllAsync(ByVal userState As Object)
            If (Me.LoadMapGridDesktopAllOperationCompleted Is Nothing) Then
                Me.LoadMapGridDesktopAllOperationCompleted = AddressOf Me.OnLoadMapGridDesktopAllOperationCompleted
            End If
            Me.InvokeAsync("LoadMapGridDesktopAll", New Object(-1) {}, Me.LoadMapGridDesktopAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadMapGridDesktopAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadMapGridDesktopAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadMapGridDesktopAllCompleted(Me, New LoadMapGridDesktopAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageFloorPlan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetImageFloorPlan(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("GetImageFloorPlan", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetImageFloorPlanAsync(ByVal id As String)
            Me.GetImageFloorPlanAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetImageFloorPlanAsync(ByVal id As String, ByVal userState As Object)
            If (Me.GetImageFloorPlanOperationCompleted Is Nothing) Then
                Me.GetImageFloorPlanOperationCompleted = AddressOf Me.OnGetImageFloorPlanOperationCompleted
            End If
            Me.InvokeAsync("GetImageFloorPlan", New Object() {id}, Me.GetImageFloorPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetImageFloorPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetImageFloorPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetImageFloorPlanCompleted(Me, New GetImageFloorPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFloorPlanByFloorAndRoom", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadFloorPlanByFloorAndRoom(ByVal ms_floor_id As String, ByVal ms_room_id As String) As String
            Dim results() As Object = Me.Invoke("LoadFloorPlanByFloorAndRoom", New Object() {ms_floor_id, ms_room_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadFloorPlanByFloorAndRoomAsync(ByVal ms_floor_id As String, ByVal ms_room_id As String)
            Me.LoadFloorPlanByFloorAndRoomAsync(ms_floor_id, ms_room_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadFloorPlanByFloorAndRoomAsync(ByVal ms_floor_id As String, ByVal ms_room_id As String, ByVal userState As Object)
            If (Me.LoadFloorPlanByFloorAndRoomOperationCompleted Is Nothing) Then
                Me.LoadFloorPlanByFloorAndRoomOperationCompleted = AddressOf Me.OnLoadFloorPlanByFloorAndRoomOperationCompleted
            End If
            Me.InvokeAsync("LoadFloorPlanByFloorAndRoom", New Object() {ms_floor_id, ms_room_id}, Me.LoadFloorPlanByFloorAndRoomOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadFloorPlanByFloorAndRoomOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadFloorPlanByFloorAndRoomCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadFloorPlanByFloorAndRoomCompleted(Me, New LoadFloorPlanByFloorAndRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadGridLayoutActive", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadGridLayoutActive() As String
            Dim results() As Object = Me.Invoke("LoadGridLayoutActive", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadGridLayoutActiveAsync()
            Me.LoadGridLayoutActiveAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadGridLayoutActiveAsync(ByVal userState As Object)
            If (Me.LoadGridLayoutActiveOperationCompleted Is Nothing) Then
                Me.LoadGridLayoutActiveOperationCompleted = AddressOf Me.OnLoadGridLayoutActiveOperationCompleted
            End If
            Me.InvokeAsync("LoadGridLayoutActive", New Object(-1) {}, Me.LoadGridLayoutActiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadGridLayoutActiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadGridLayoutActiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadGridLayoutActiveCompleted(Me, New LoadGridLayoutActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoomDetailById", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRoomDetailById(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("GetRoomDetailById", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRoomDetailByIdAsync(ByVal id As String)
            Me.GetRoomDetailByIdAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRoomDetailByIdAsync(ByVal id As String, ByVal userState As Object)
            If (Me.GetRoomDetailByIdOperationCompleted Is Nothing) Then
                Me.GetRoomDetailByIdOperationCompleted = AddressOf Me.OnGetRoomDetailByIdOperationCompleted
            End If
            Me.InvokeAsync("GetRoomDetailById", New Object() {id}, Me.GetRoomDetailByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRoomDetailByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRoomDetailByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRoomDetailByIdCompleted(Me, New GetRoomDetailByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveCurrentInRoom", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveCurrentInRoom(ByVal id As String, ByVal floorcurrentId As String, ByVal gridcurrentId As String, ByVal userid As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveCurrentInRoom", New Object() {id, floorcurrentId, gridcurrentId, userid})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveCurrentInRoomAsync(ByVal id As String, ByVal floorcurrentId As String, ByVal gridcurrentId As String, ByVal userid As String)
            Me.SaveCurrentInRoomAsync(id, floorcurrentId, gridcurrentId, userid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveCurrentInRoomAsync(ByVal id As String, ByVal floorcurrentId As String, ByVal gridcurrentId As String, ByVal userid As String, ByVal userState As Object)
            If (Me.SaveCurrentInRoomOperationCompleted Is Nothing) Then
                Me.SaveCurrentInRoomOperationCompleted = AddressOf Me.OnSaveCurrentInRoomOperationCompleted
            End If
            Me.InvokeAsync("SaveCurrentInRoom", New Object() {id, floorcurrentId, gridcurrentId, userid}, Me.SaveCurrentInRoomOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveCurrentInRoomOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveCurrentInRoomCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveCurrentInRoomCompleted(Me, New SaveCurrentInRoomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadOfficerRoomByRoomId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadOfficerRoomByRoomId(ByVal roomid As String) As String
            Dim results() As Object = Me.Invoke("LoadOfficerRoomByRoomId", New Object() {roomid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadOfficerRoomByRoomIdAsync(ByVal roomid As String)
            Me.LoadOfficerRoomByRoomIdAsync(roomid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadOfficerRoomByRoomIdAsync(ByVal roomid As String, ByVal userState As Object)
            If (Me.LoadOfficerRoomByRoomIdOperationCompleted Is Nothing) Then
                Me.LoadOfficerRoomByRoomIdOperationCompleted = AddressOf Me.OnLoadOfficerRoomByRoomIdOperationCompleted
            End If
            Me.InvokeAsync("LoadOfficerRoomByRoomId", New Object() {roomid}, Me.LoadOfficerRoomByRoomIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadOfficerRoomByRoomIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadOfficerRoomByRoomIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadOfficerRoomByRoomIdCompleted(Me, New LoadOfficerRoomByRoomIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFloorPlanByRoomId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadFloorPlanByRoomId(ByVal roomid As String, ByVal gridlayoutcurrentid As String, ByVal desktopid As String) As String
            Dim results() As Object = Me.Invoke("LoadFloorPlanByRoomId", New Object() {roomid, gridlayoutcurrentid, desktopid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadFloorPlanByRoomIdAsync(ByVal roomid As String, ByVal gridlayoutcurrentid As String, ByVal desktopid As String)
            Me.LoadFloorPlanByRoomIdAsync(roomid, gridlayoutcurrentid, desktopid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadFloorPlanByRoomIdAsync(ByVal roomid As String, ByVal gridlayoutcurrentid As String, ByVal desktopid As String, ByVal userState As Object)
            If (Me.LoadFloorPlanByRoomIdOperationCompleted Is Nothing) Then
                Me.LoadFloorPlanByRoomIdOperationCompleted = AddressOf Me.OnLoadFloorPlanByRoomIdOperationCompleted
            End If
            Me.InvokeAsync("LoadFloorPlanByRoomId", New Object() {roomid, gridlayoutcurrentid, desktopid}, Me.LoadFloorPlanByRoomIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadFloorPlanByRoomIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadFloorPlanByRoomIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadFloorPlanByRoomIdCompleted(Me, New LoadFloorPlanByRoomIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadOfficerMapLayoutByLayoutId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadOfficerMapLayoutByLayoutId(ByVal gridlayoutid As String) As String
            Dim results() As Object = Me.Invoke("LoadOfficerMapLayoutByLayoutId", New Object() {gridlayoutid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadOfficerMapLayoutByLayoutIdAsync(ByVal gridlayoutid As String)
            Me.LoadOfficerMapLayoutByLayoutIdAsync(gridlayoutid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadOfficerMapLayoutByLayoutIdAsync(ByVal gridlayoutid As String, ByVal userState As Object)
            If (Me.LoadOfficerMapLayoutByLayoutIdOperationCompleted Is Nothing) Then
                Me.LoadOfficerMapLayoutByLayoutIdOperationCompleted = AddressOf Me.OnLoadOfficerMapLayoutByLayoutIdOperationCompleted
            End If
            Me.InvokeAsync("LoadOfficerMapLayoutByLayoutId", New Object() {gridlayoutid}, Me.LoadOfficerMapLayoutByLayoutIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadOfficerMapLayoutByLayoutIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadOfficerMapLayoutByLayoutIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadOfficerMapLayoutByLayoutIdCompleted(Me, New LoadOfficerMapLayoutByLayoutIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMapGrid", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveMapGrid(ByVal ms_desktop_id As String, ByVal ms_grid_layout_id As String, ByVal grid_col As String, ByVal grid_row As String, ByVal userid As String) As String
            Dim results() As Object = Me.Invoke("SaveMapGrid", New Object() {ms_desktop_id, ms_grid_layout_id, grid_col, grid_row, userid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveMapGridAsync(ByVal ms_desktop_id As String, ByVal ms_grid_layout_id As String, ByVal grid_col As String, ByVal grid_row As String, ByVal userid As String)
            Me.SaveMapGridAsync(ms_desktop_id, ms_grid_layout_id, grid_col, grid_row, userid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveMapGridAsync(ByVal ms_desktop_id As String, ByVal ms_grid_layout_id As String, ByVal grid_col As String, ByVal grid_row As String, ByVal userid As String, ByVal userState As Object)
            If (Me.SaveMapGridOperationCompleted Is Nothing) Then
                Me.SaveMapGridOperationCompleted = AddressOf Me.OnSaveMapGridOperationCompleted
            End If
            Me.InvokeAsync("SaveMapGrid", New Object() {ms_desktop_id, ms_grid_layout_id, grid_col, grid_row, userid}, Me.SaveMapGridOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveMapGridOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveMapGridCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveMapGridCompleted(Me, New SaveMapGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSpeedWayReadAreaAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSpeedWayReadAreaAll() As String
            Dim results() As Object = Me.Invoke("LoadSpeedWayReadAreaAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedWayReadAreaAllAsync()
            Me.LoadSpeedWayReadAreaAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedWayReadAreaAllAsync(ByVal userState As Object)
            If (Me.LoadSpeedWayReadAreaAllOperationCompleted Is Nothing) Then
                Me.LoadSpeedWayReadAreaAllOperationCompleted = AddressOf Me.OnLoadSpeedWayReadAreaAllOperationCompleted
            End If
            Me.InvokeAsync("LoadSpeedWayReadAreaAll", New Object(-1) {}, Me.LoadSpeedWayReadAreaAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSpeedWayReadAreaAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSpeedWayReadAreaAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSpeedWayReadAreaAllCompleted(Me, New LoadSpeedWayReadAreaAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSpeedWayByRoomId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSpeedWayByRoomId(ByVal roomid As String) As String
            Dim results() As Object = Me.Invoke("LoadSpeedWayByRoomId", New Object() {roomid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedWayByRoomIdAsync(ByVal roomid As String)
            Me.LoadSpeedWayByRoomIdAsync(roomid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedWayByRoomIdAsync(ByVal roomid As String, ByVal userState As Object)
            If (Me.LoadSpeedWayByRoomIdOperationCompleted Is Nothing) Then
                Me.LoadSpeedWayByRoomIdOperationCompleted = AddressOf Me.OnLoadSpeedWayByRoomIdOperationCompleted
            End If
            Me.InvokeAsync("LoadSpeedWayByRoomId", New Object() {roomid}, Me.LoadSpeedWayByRoomIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSpeedWayByRoomIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSpeedWayByRoomIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSpeedWayByRoomIdCompleted(Me, New LoadSpeedWayByRoomIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAntennaBySpeedway", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadAntennaBySpeedway(ByVal speedwayid As String) As String
            Dim results() As Object = Me.Invoke("LoadAntennaBySpeedway", New Object() {speedwayid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadAntennaBySpeedwayAsync(ByVal speedwayid As String)
            Me.LoadAntennaBySpeedwayAsync(speedwayid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadAntennaBySpeedwayAsync(ByVal speedwayid As String, ByVal userState As Object)
            If (Me.LoadAntennaBySpeedwayOperationCompleted Is Nothing) Then
                Me.LoadAntennaBySpeedwayOperationCompleted = AddressOf Me.OnLoadAntennaBySpeedwayOperationCompleted
            End If
            Me.InvokeAsync("LoadAntennaBySpeedway", New Object() {speedwayid}, Me.LoadAntennaBySpeedwayOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadAntennaBySpeedwayOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadAntennaBySpeedwayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadAntennaBySpeedwayCompleted(Me, New LoadAntennaBySpeedwayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAttenaMapLayoutByPort", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadAttenaMapLayoutByPort(ByVal ms_speedway_id As String) As String
            Dim results() As Object = Me.Invoke("LoadAttenaMapLayoutByPort", New Object() {ms_speedway_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadAttenaMapLayoutByPortAsync(ByVal ms_speedway_id As String)
            Me.LoadAttenaMapLayoutByPortAsync(ms_speedway_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadAttenaMapLayoutByPortAsync(ByVal ms_speedway_id As String, ByVal userState As Object)
            If (Me.LoadAttenaMapLayoutByPortOperationCompleted Is Nothing) Then
                Me.LoadAttenaMapLayoutByPortOperationCompleted = AddressOf Me.OnLoadAttenaMapLayoutByPortOperationCompleted
            End If
            Me.InvokeAsync("LoadAttenaMapLayoutByPort", New Object() {ms_speedway_id}, Me.LoadAttenaMapLayoutByPortOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadAttenaMapLayoutByPortOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadAttenaMapLayoutByPortCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadAttenaMapLayoutByPortCompleted(Me, New LoadAttenaMapLayoutByPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAntennaPlanByRoomId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadAntennaPlanByRoomId(ByVal roomid As String, ByVal gridlayoutcurrentid As String, ByVal speedwayantid As String) As String
            Dim results() As Object = Me.Invoke("LoadAntennaPlanByRoomId", New Object() {roomid, gridlayoutcurrentid, speedwayantid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadAntennaPlanByRoomIdAsync(ByVal roomid As String, ByVal gridlayoutcurrentid As String, ByVal speedwayantid As String)
            Me.LoadAntennaPlanByRoomIdAsync(roomid, gridlayoutcurrentid, speedwayantid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadAntennaPlanByRoomIdAsync(ByVal roomid As String, ByVal gridlayoutcurrentid As String, ByVal speedwayantid As String, ByVal userState As Object)
            If (Me.LoadAntennaPlanByRoomIdOperationCompleted Is Nothing) Then
                Me.LoadAntennaPlanByRoomIdOperationCompleted = AddressOf Me.OnLoadAntennaPlanByRoomIdOperationCompleted
            End If
            Me.InvokeAsync("LoadAntennaPlanByRoomId", New Object() {roomid, gridlayoutcurrentid, speedwayantid}, Me.LoadAntennaPlanByRoomIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadAntennaPlanByRoomIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadAntennaPlanByRoomIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadAntennaPlanByRoomIdCompleted(Me, New LoadAntennaPlanByRoomIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMapAntenna", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveMapAntenna(ByVal ms_speedway_ant_id As String, ByVal ms_grid_layout_id As String, ByVal grid_col As String, ByVal grid_row As String, ByVal userid As String) As String
            Dim results() As Object = Me.Invoke("SaveMapAntenna", New Object() {ms_speedway_ant_id, ms_grid_layout_id, grid_col, grid_row, userid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveMapAntennaAsync(ByVal ms_speedway_ant_id As String, ByVal ms_grid_layout_id As String, ByVal grid_col As String, ByVal grid_row As String, ByVal userid As String)
            Me.SaveMapAntennaAsync(ms_speedway_ant_id, ms_grid_layout_id, grid_col, grid_row, userid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveMapAntennaAsync(ByVal ms_speedway_ant_id As String, ByVal ms_grid_layout_id As String, ByVal grid_col As String, ByVal grid_row As String, ByVal userid As String, ByVal userState As Object)
            If (Me.SaveMapAntennaOperationCompleted Is Nothing) Then
                Me.SaveMapAntennaOperationCompleted = AddressOf Me.OnSaveMapAntennaOperationCompleted
            End If
            Me.InvokeAsync("SaveMapAntenna", New Object() {ms_speedway_ant_id, ms_grid_layout_id, grid_col, grid_row, userid}, Me.SaveMapAntennaOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveMapAntennaOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveMapAntennaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveMapAntennaCompleted(Me, New SaveMapAntennaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSysConfig", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSysConfig() As String
            Dim results() As Object = Me.Invoke("LoadSysConfig", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSysConfigAsync()
            Me.LoadSysConfigAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSysConfigAsync(ByVal userState As Object)
            If (Me.LoadSysConfigOperationCompleted Is Nothing) Then
                Me.LoadSysConfigOperationCompleted = AddressOf Me.OnLoadSysConfigOperationCompleted
            End If
            Me.InvokeAsync("LoadSysConfig", New Object(-1) {}, Me.LoadSysConfigOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSysConfigOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSysConfigCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSysConfigCompleted(Me, New LoadSysConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSysconfig", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveSysconfig(ByVal UserName As String, ByVal ConfigName As String, ByVal ConfigValue As String) As String
            Dim results() As Object = Me.Invoke("SaveSysconfig", New Object() {UserName, ConfigName, ConfigValue})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveSysconfigAsync(ByVal UserName As String, ByVal ConfigName As String, ByVal ConfigValue As String)
            Me.SaveSysconfigAsync(UserName, ConfigName, ConfigValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveSysconfigAsync(ByVal UserName As String, ByVal ConfigName As String, ByVal ConfigValue As String, ByVal userState As Object)
            If (Me.SaveSysconfigOperationCompleted Is Nothing) Then
                Me.SaveSysconfigOperationCompleted = AddressOf Me.OnSaveSysconfigOperationCompleted
            End If
            Me.InvokeAsync("SaveSysconfig", New Object() {UserName, ConfigName, ConfigValue}, Me.SaveSysconfigOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveSysconfigOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveSysconfigCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveSysconfigCompleted(Me, New SaveSysconfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadDesktopAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadDesktopAll() As String
            Dim results() As Object = Me.Invoke("LoadDesktopAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadDesktopAllAsync()
            Me.LoadDesktopAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadDesktopAllAsync(ByVal userState As Object)
            If (Me.LoadDesktopAllOperationCompleted Is Nothing) Then
                Me.LoadDesktopAllOperationCompleted = AddressOf Me.OnLoadDesktopAllOperationCompleted
            End If
            Me.InvokeAsync("LoadDesktopAll", New Object(-1) {}, Me.LoadDesktopAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadDesktopAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadDesktopAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadDesktopAllCompleted(Me, New LoadDesktopAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDesktopById", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDesktopById(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("GetDesktopById", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDesktopByIdAsync(ByVal id As String)
            Me.GetDesktopByIdAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDesktopByIdAsync(ByVal id As String, ByVal userState As Object)
            If (Me.GetDesktopByIdOperationCompleted Is Nothing) Then
                Me.GetDesktopByIdOperationCompleted = AddressOf Me.OnGetDesktopByIdOperationCompleted
            End If
            Me.InvokeAsync("GetDesktopById", New Object() {id}, Me.GetDesktopByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDesktopByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDesktopByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDesktopByIdCompleted(Me, New GetDesktopByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveDesktop", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveDesktop(ByVal id As String, ByVal desk_name As String, ByVal ms_room_id As String, ByVal tb_officer_id As String, ByVal active As String, ByVal login_username As String) As String
            Dim results() As Object = Me.Invoke("SaveDesktop", New Object() {id, desk_name, ms_room_id, tb_officer_id, active, login_username})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveDesktopAsync(ByVal id As String, ByVal desk_name As String, ByVal ms_room_id As String, ByVal tb_officer_id As String, ByVal active As String, ByVal login_username As String)
            Me.SaveDesktopAsync(id, desk_name, ms_room_id, tb_officer_id, active, login_username, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveDesktopAsync(ByVal id As String, ByVal desk_name As String, ByVal ms_room_id As String, ByVal tb_officer_id As String, ByVal active As String, ByVal login_username As String, ByVal userState As Object)
            If (Me.SaveDesktopOperationCompleted Is Nothing) Then
                Me.SaveDesktopOperationCompleted = AddressOf Me.OnSaveDesktopOperationCompleted
            End If
            Me.InvokeAsync("SaveDesktop", New Object() {id, desk_name, ms_room_id, tb_officer_id, active, login_username}, Me.SaveDesktopOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveDesktopOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveDesktopCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveDesktopCompleted(Me, New SaveDesktopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDesktop", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteDesktop(ByVal id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteDesktop", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteDesktopAsync(ByVal id As String)
            Me.DeleteDesktopAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDesktopAsync(ByVal id As String, ByVal userState As Object)
            If (Me.DeleteDesktopOperationCompleted Is Nothing) Then
                Me.DeleteDesktopOperationCompleted = AddressOf Me.OnDeleteDesktopOperationCompleted
            End If
            Me.InvokeAsync("DeleteDesktop", New Object() {id}, Me.DeleteDesktopOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDesktopOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDesktopCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDesktopCompleted(Me, New DeleteDesktopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadDepartment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadDepartment() As String
            Dim results() As Object = Me.Invoke("LoadDepartment", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadDepartmentAsync()
            Me.LoadDepartmentAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadDepartmentAsync(ByVal userState As Object)
            If (Me.LoadDepartmentOperationCompleted Is Nothing) Then
                Me.LoadDepartmentOperationCompleted = AddressOf Me.OnLoadDepartmentOperationCompleted
            End If
            Me.InvokeAsync("LoadDepartment", New Object(-1) {}, Me.LoadDepartmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadDepartmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadDepartmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadDepartmentCompleted(Me, New LoadDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadDepartmentByUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadDepartmentByUser(ByVal user_id As String) As String
            Dim results() As Object = Me.Invoke("LoadDepartmentByUser", New Object() {user_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadDepartmentByUserAsync(ByVal user_id As String)
            Me.LoadDepartmentByUserAsync(user_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadDepartmentByUserAsync(ByVal user_id As String, ByVal userState As Object)
            If (Me.LoadDepartmentByUserOperationCompleted Is Nothing) Then
                Me.LoadDepartmentByUserOperationCompleted = AddressOf Me.OnLoadDepartmentByUserOperationCompleted
            End If
            Me.InvokeAsync("LoadDepartmentByUser", New Object() {user_id}, Me.LoadDepartmentByUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadDepartmentByUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadDepartmentByUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadDepartmentByUserCompleted(Me, New LoadDepartmentByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSinageScheduleAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSinageScheduleAll() As String
            Dim results() As Object = Me.Invoke("LoadSinageScheduleAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSinageScheduleAllAsync()
            Me.LoadSinageScheduleAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSinageScheduleAllAsync(ByVal userState As Object)
            If (Me.LoadSinageScheduleAllOperationCompleted Is Nothing) Then
                Me.LoadSinageScheduleAllOperationCompleted = AddressOf Me.OnLoadSinageScheduleAllOperationCompleted
            End If
            Me.InvokeAsync("LoadSinageScheduleAll", New Object(-1) {}, Me.LoadSinageScheduleAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSinageScheduleAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSinageScheduleAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSinageScheduleAllCompleted(Me, New LoadSinageScheduleAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSinageScheduleID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSinageScheduleID(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("LoadSinageScheduleID", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSinageScheduleIDAsync(ByVal id As String)
            Me.LoadSinageScheduleIDAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSinageScheduleIDAsync(ByVal id As String, ByVal userState As Object)
            If (Me.LoadSinageScheduleIDOperationCompleted Is Nothing) Then
                Me.LoadSinageScheduleIDOperationCompleted = AddressOf Me.OnLoadSinageScheduleIDOperationCompleted
            End If
            Me.InvokeAsync("LoadSinageScheduleID", New Object() {id}, Me.LoadSinageScheduleIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSinageScheduleIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSinageScheduleIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSinageScheduleIDCompleted(Me, New LoadSinageScheduleIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadMonthByDigitalSinageTemplateSchedule", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadMonthByDigitalSinageTemplateSchedule(ByVal ms_signage_template_schedule_id As String) As String
            Dim results() As Object = Me.Invoke("LoadMonthByDigitalSinageTemplateSchedule", New Object() {ms_signage_template_schedule_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadMonthByDigitalSinageTemplateScheduleAsync(ByVal ms_signage_template_schedule_id As String)
            Me.LoadMonthByDigitalSinageTemplateScheduleAsync(ms_signage_template_schedule_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadMonthByDigitalSinageTemplateScheduleAsync(ByVal ms_signage_template_schedule_id As String, ByVal userState As Object)
            If (Me.LoadMonthByDigitalSinageTemplateScheduleOperationCompleted Is Nothing) Then
                Me.LoadMonthByDigitalSinageTemplateScheduleOperationCompleted = AddressOf Me.OnLoadMonthByDigitalSinageTemplateScheduleOperationCompleted
            End If
            Me.InvokeAsync("LoadMonthByDigitalSinageTemplateSchedule", New Object() {ms_signage_template_schedule_id}, Me.LoadMonthByDigitalSinageTemplateScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadMonthByDigitalSinageTemplateScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadMonthByDigitalSinageTemplateScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadMonthByDigitalSinageTemplateScheduleCompleted(Me, New LoadMonthByDigitalSinageTemplateScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadDayByDigitalSinageTemplateSchedule", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadDayByDigitalSinageTemplateSchedule(ByVal ms_signage_template_schedule_id As String) As String
            Dim results() As Object = Me.Invoke("LoadDayByDigitalSinageTemplateSchedule", New Object() {ms_signage_template_schedule_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadDayByDigitalSinageTemplateScheduleAsync(ByVal ms_signage_template_schedule_id As String)
            Me.LoadDayByDigitalSinageTemplateScheduleAsync(ms_signage_template_schedule_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadDayByDigitalSinageTemplateScheduleAsync(ByVal ms_signage_template_schedule_id As String, ByVal userState As Object)
            If (Me.LoadDayByDigitalSinageTemplateScheduleOperationCompleted Is Nothing) Then
                Me.LoadDayByDigitalSinageTemplateScheduleOperationCompleted = AddressOf Me.OnLoadDayByDigitalSinageTemplateScheduleOperationCompleted
            End If
            Me.InvokeAsync("LoadDayByDigitalSinageTemplateSchedule", New Object() {ms_signage_template_schedule_id}, Me.LoadDayByDigitalSinageTemplateScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadDayByDigitalSinageTemplateScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadDayByDigitalSinageTemplateScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadDayByDigitalSinageTemplateScheduleCompleted(Me, New LoadDayByDigitalSinageTemplateScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSinageScheduleDailyByTemplateID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSinageScheduleDailyByTemplateID(ByVal ms_signage_template_schedule_id As String) As String
            Dim results() As Object = Me.Invoke("LoadSinageScheduleDailyByTemplateID", New Object() {ms_signage_template_schedule_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSinageScheduleDailyByTemplateIDAsync(ByVal ms_signage_template_schedule_id As String)
            Me.LoadSinageScheduleDailyByTemplateIDAsync(ms_signage_template_schedule_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSinageScheduleDailyByTemplateIDAsync(ByVal ms_signage_template_schedule_id As String, ByVal userState As Object)
            If (Me.LoadSinageScheduleDailyByTemplateIDOperationCompleted Is Nothing) Then
                Me.LoadSinageScheduleDailyByTemplateIDOperationCompleted = AddressOf Me.OnLoadSinageScheduleDailyByTemplateIDOperationCompleted
            End If
            Me.InvokeAsync("LoadSinageScheduleDailyByTemplateID", New Object() {ms_signage_template_schedule_id}, Me.LoadSinageScheduleDailyByTemplateIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSinageScheduleDailyByTemplateIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSinageScheduleDailyByTemplateIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSinageScheduleDailyByTemplateIDCompleted(Me, New LoadSinageScheduleDailyByTemplateIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSinageScheduleWeeklyByTemplateID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSinageScheduleWeeklyByTemplateID(ByVal ms_signage_template_schedule_id As String) As String
            Dim results() As Object = Me.Invoke("LoadSinageScheduleWeeklyByTemplateID", New Object() {ms_signage_template_schedule_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSinageScheduleWeeklyByTemplateIDAsync(ByVal ms_signage_template_schedule_id As String)
            Me.LoadSinageScheduleWeeklyByTemplateIDAsync(ms_signage_template_schedule_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSinageScheduleWeeklyByTemplateIDAsync(ByVal ms_signage_template_schedule_id As String, ByVal userState As Object)
            If (Me.LoadSinageScheduleWeeklyByTemplateIDOperationCompleted Is Nothing) Then
                Me.LoadSinageScheduleWeeklyByTemplateIDOperationCompleted = AddressOf Me.OnLoadSinageScheduleWeeklyByTemplateIDOperationCompleted
            End If
            Me.InvokeAsync("LoadSinageScheduleWeeklyByTemplateID", New Object() {ms_signage_template_schedule_id}, Me.LoadSinageScheduleWeeklyByTemplateIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSinageScheduleWeeklyByTemplateIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSinageScheduleWeeklyByTemplateIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSinageScheduleWeeklyByTemplateIDCompleted(Me, New LoadSinageScheduleWeeklyByTemplateIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSinageScheduleTimeByTemplateID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSinageScheduleTimeByTemplateID(ByVal ms_signage_template_schedule_id As String) As String
            Dim results() As Object = Me.Invoke("LoadSinageScheduleTimeByTemplateID", New Object() {ms_signage_template_schedule_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSinageScheduleTimeByTemplateIDAsync(ByVal ms_signage_template_schedule_id As String)
            Me.LoadSinageScheduleTimeByTemplateIDAsync(ms_signage_template_schedule_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSinageScheduleTimeByTemplateIDAsync(ByVal ms_signage_template_schedule_id As String, ByVal userState As Object)
            If (Me.LoadSinageScheduleTimeByTemplateIDOperationCompleted Is Nothing) Then
                Me.LoadSinageScheduleTimeByTemplateIDOperationCompleted = AddressOf Me.OnLoadSinageScheduleTimeByTemplateIDOperationCompleted
            End If
            Me.InvokeAsync("LoadSinageScheduleTimeByTemplateID", New Object() {ms_signage_template_schedule_id}, Me.LoadSinageScheduleTimeByTemplateIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSinageScheduleTimeByTemplateIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSinageScheduleTimeByTemplateIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSinageScheduleTimeByTemplateIDCompleted(Me, New LoadSinageScheduleTimeByTemplateIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSinageSchedule", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveSinageSchedule( _
                    ByVal id As String,  _
                    ByVal schedule_name As String,  _
                    ByVal ms_signage_content_template_id As String,  _
                    ByVal ms_led_tv_id As String,  _
                    ByVal start_date As String,  _
                    ByVal end_date As String,  _
                    ByVal start_time As String,  _
                    ByVal end_time As String,  _
                    ByVal active_status As String,  _
                    ByVal daily As String,  _
                    ByVal weekly As String,  _
                    ByVal monthly As String,  _
                    ByVal recur_every_days As String,  _
                    ByVal recur_every_week As String,  _
                    ByVal sch_sun As String,  _
                    ByVal sch_mon As String,  _
                    ByVal sch_tue As String,  _
                    ByVal sch_wed As String,  _
                    ByVal sch_thu As String,  _
                    ByVal sch_fri As String,  _
                    ByVal sch_sat As String,  _
                    ByVal month_no As String,  _
                    ByVal date_no As String,  _
                    ByVal jsonobject_time As String,  _
                    ByVal login_username As String) As String
            Dim results() As Object = Me.Invoke("SaveSinageSchedule", New Object() {id, schedule_name, ms_signage_content_template_id, ms_led_tv_id, start_date, end_date, start_time, end_time, active_status, daily, weekly, monthly, recur_every_days, recur_every_week, sch_sun, sch_mon, sch_tue, sch_wed, sch_thu, sch_fri, sch_sat, month_no, date_no, jsonobject_time, login_username})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveSinageScheduleAsync( _
                    ByVal id As String,  _
                    ByVal schedule_name As String,  _
                    ByVal ms_signage_content_template_id As String,  _
                    ByVal ms_led_tv_id As String,  _
                    ByVal start_date As String,  _
                    ByVal end_date As String,  _
                    ByVal start_time As String,  _
                    ByVal end_time As String,  _
                    ByVal active_status As String,  _
                    ByVal daily As String,  _
                    ByVal weekly As String,  _
                    ByVal monthly As String,  _
                    ByVal recur_every_days As String,  _
                    ByVal recur_every_week As String,  _
                    ByVal sch_sun As String,  _
                    ByVal sch_mon As String,  _
                    ByVal sch_tue As String,  _
                    ByVal sch_wed As String,  _
                    ByVal sch_thu As String,  _
                    ByVal sch_fri As String,  _
                    ByVal sch_sat As String,  _
                    ByVal month_no As String,  _
                    ByVal date_no As String,  _
                    ByVal jsonobject_time As String,  _
                    ByVal login_username As String)
            Me.SaveSinageScheduleAsync(id, schedule_name, ms_signage_content_template_id, ms_led_tv_id, start_date, end_date, start_time, end_time, active_status, daily, weekly, monthly, recur_every_days, recur_every_week, sch_sun, sch_mon, sch_tue, sch_wed, sch_thu, sch_fri, sch_sat, month_no, date_no, jsonobject_time, login_username, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveSinageScheduleAsync( _
                    ByVal id As String,  _
                    ByVal schedule_name As String,  _
                    ByVal ms_signage_content_template_id As String,  _
                    ByVal ms_led_tv_id As String,  _
                    ByVal start_date As String,  _
                    ByVal end_date As String,  _
                    ByVal start_time As String,  _
                    ByVal end_time As String,  _
                    ByVal active_status As String,  _
                    ByVal daily As String,  _
                    ByVal weekly As String,  _
                    ByVal monthly As String,  _
                    ByVal recur_every_days As String,  _
                    ByVal recur_every_week As String,  _
                    ByVal sch_sun As String,  _
                    ByVal sch_mon As String,  _
                    ByVal sch_tue As String,  _
                    ByVal sch_wed As String,  _
                    ByVal sch_thu As String,  _
                    ByVal sch_fri As String,  _
                    ByVal sch_sat As String,  _
                    ByVal month_no As String,  _
                    ByVal date_no As String,  _
                    ByVal jsonobject_time As String,  _
                    ByVal login_username As String,  _
                    ByVal userState As Object)
            If (Me.SaveSinageScheduleOperationCompleted Is Nothing) Then
                Me.SaveSinageScheduleOperationCompleted = AddressOf Me.OnSaveSinageScheduleOperationCompleted
            End If
            Me.InvokeAsync("SaveSinageSchedule", New Object() {id, schedule_name, ms_signage_content_template_id, ms_led_tv_id, start_date, end_date, start_time, end_time, active_status, daily, weekly, monthly, recur_every_days, recur_every_week, sch_sun, sch_mon, sch_tue, sch_wed, sch_thu, sch_fri, sch_sat, month_no, date_no, jsonobject_time, login_username}, Me.SaveSinageScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveSinageScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveSinageScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveSinageScheduleCompleted(Me, New SaveSinageScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSinageSchedule", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteSinageSchedule(ByVal id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteSinageSchedule", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteSinageScheduleAsync(ByVal id As String)
            Me.DeleteSinageScheduleAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSinageScheduleAsync(ByVal id As String, ByVal userState As Object)
            If (Me.DeleteSinageScheduleOperationCompleted Is Nothing) Then
                Me.DeleteSinageScheduleOperationCompleted = AddressOf Me.OnDeleteSinageScheduleOperationCompleted
            End If
            Me.InvokeAsync("DeleteSinageSchedule", New Object() {id}, Me.DeleteSinageScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSinageScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSinageScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSinageScheduleCompleted(Me, New DeleteSinageScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFloorAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadFloorAll() As String
            Dim results() As Object = Me.Invoke("LoadFloorAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadFloorAllAsync()
            Me.LoadFloorAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadFloorAllAsync(ByVal userState As Object)
            If (Me.LoadFloorAllOperationCompleted Is Nothing) Then
                Me.LoadFloorAllOperationCompleted = AddressOf Me.OnLoadFloorAllOperationCompleted
            End If
            Me.InvokeAsync("LoadFloorAll", New Object(-1) {}, Me.LoadFloorAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadFloorAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadFloorAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadFloorAllCompleted(Me, New LoadFloorAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFloorByFloorPlan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadFloorByFloorPlan(ByVal floor_plan_id As String) As String
            Dim results() As Object = Me.Invoke("LoadFloorByFloorPlan", New Object() {floor_plan_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadFloorByFloorPlanAsync(ByVal floor_plan_id As String)
            Me.LoadFloorByFloorPlanAsync(floor_plan_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadFloorByFloorPlanAsync(ByVal floor_plan_id As String, ByVal userState As Object)
            If (Me.LoadFloorByFloorPlanOperationCompleted Is Nothing) Then
                Me.LoadFloorByFloorPlanOperationCompleted = AddressOf Me.OnLoadFloorByFloorPlanOperationCompleted
            End If
            Me.InvokeAsync("LoadFloorByFloorPlan", New Object() {floor_plan_id}, Me.LoadFloorByFloorPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadFloorByFloorPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadFloorByFloorPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadFloorByFloorPlanCompleted(Me, New LoadFloorByFloorPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFloorByDesktop", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadFloorByDesktop(ByVal desktop_id As String) As String
            Dim results() As Object = Me.Invoke("LoadFloorByDesktop", New Object() {desktop_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadFloorByDesktopAsync(ByVal desktop_id As String)
            Me.LoadFloorByDesktopAsync(desktop_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadFloorByDesktopAsync(ByVal desktop_id As String, ByVal userState As Object)
            If (Me.LoadFloorByDesktopOperationCompleted Is Nothing) Then
                Me.LoadFloorByDesktopOperationCompleted = AddressOf Me.OnLoadFloorByDesktopOperationCompleted
            End If
            Me.InvokeAsync("LoadFloorByDesktop", New Object() {desktop_id}, Me.LoadFloorByDesktopOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadFloorByDesktopOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadFloorByDesktopCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadFloorByDesktopCompleted(Me, New LoadFloorByDesktopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFloorBySpeedway", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadFloorBySpeedway(ByVal speedway_id As String) As String
            Dim results() As Object = Me.Invoke("LoadFloorBySpeedway", New Object() {speedway_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadFloorBySpeedwayAsync(ByVal speedway_id As String)
            Me.LoadFloorBySpeedwayAsync(speedway_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadFloorBySpeedwayAsync(ByVal speedway_id As String, ByVal userState As Object)
            If (Me.LoadFloorBySpeedwayOperationCompleted Is Nothing) Then
                Me.LoadFloorBySpeedwayOperationCompleted = AddressOf Me.OnLoadFloorBySpeedwayOperationCompleted
            End If
            Me.InvokeAsync("LoadFloorBySpeedway", New Object() {speedway_id}, Me.LoadFloorBySpeedwayOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadFloorBySpeedwayOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadFloorBySpeedwayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadFloorBySpeedwayCompleted(Me, New LoadFloorBySpeedwayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFloorByLEDTV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadFloorByLEDTV(ByVal ledtv_id As String) As String
            Dim results() As Object = Me.Invoke("LoadFloorByLEDTV", New Object() {ledtv_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadFloorByLEDTVAsync(ByVal ledtv_id As String)
            Me.LoadFloorByLEDTVAsync(ledtv_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadFloorByLEDTVAsync(ByVal ledtv_id As String, ByVal userState As Object)
            If (Me.LoadFloorByLEDTVOperationCompleted Is Nothing) Then
                Me.LoadFloorByLEDTVOperationCompleted = AddressOf Me.OnLoadFloorByLEDTVOperationCompleted
            End If
            Me.InvokeAsync("LoadFloorByLEDTV", New Object() {ledtv_id}, Me.LoadFloorByLEDTVOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadFloorByLEDTVOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadFloorByLEDTVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadFloorByLEDTVCompleted(Me, New LoadFloorByLEDTVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFloorPlanAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadFloorPlanAll() As String
            Dim results() As Object = Me.Invoke("LoadFloorPlanAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadFloorPlanAllAsync()
            Me.LoadFloorPlanAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadFloorPlanAllAsync(ByVal userState As Object)
            If (Me.LoadFloorPlanAllOperationCompleted Is Nothing) Then
                Me.LoadFloorPlanAllOperationCompleted = AddressOf Me.OnLoadFloorPlanAllOperationCompleted
            End If
            Me.InvokeAsync("LoadFloorPlanAll", New Object(-1) {}, Me.LoadFloorPlanAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadFloorPlanAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadFloorPlanAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadFloorPlanAllCompleted(Me, New LoadFloorPlanAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFloorPlanById", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFloorPlanById(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("GetFloorPlanById", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFloorPlanByIdAsync(ByVal id As String)
            Me.GetFloorPlanByIdAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFloorPlanByIdAsync(ByVal id As String, ByVal userState As Object)
            If (Me.GetFloorPlanByIdOperationCompleted Is Nothing) Then
                Me.GetFloorPlanByIdOperationCompleted = AddressOf Me.OnGetFloorPlanByIdOperationCompleted
            End If
            Me.InvokeAsync("GetFloorPlanById", New Object() {id}, Me.GetFloorPlanByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFloorPlanByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFloorPlanByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFloorPlanByIdCompleted(Me, New GetFloorPlanByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFloorPlan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveFloorPlan(ByVal id As String, ByVal floor_id As String, ByVal room_id As String, ByVal login_username As String, ByVal active As String, ByVal strimagebase64 As String, ByVal strimagename As String, ByVal floor_plan_name As String) As String
            Dim results() As Object = Me.Invoke("SaveFloorPlan", New Object() {id, floor_id, room_id, login_username, active, strimagebase64, strimagename, floor_plan_name})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveFloorPlanAsync(ByVal id As String, ByVal floor_id As String, ByVal room_id As String, ByVal login_username As String, ByVal active As String, ByVal strimagebase64 As String, ByVal strimagename As String, ByVal floor_plan_name As String)
            Me.SaveFloorPlanAsync(id, floor_id, room_id, login_username, active, strimagebase64, strimagename, floor_plan_name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveFloorPlanAsync(ByVal id As String, ByVal floor_id As String, ByVal room_id As String, ByVal login_username As String, ByVal active As String, ByVal strimagebase64 As String, ByVal strimagename As String, ByVal floor_plan_name As String, ByVal userState As Object)
            If (Me.SaveFloorPlanOperationCompleted Is Nothing) Then
                Me.SaveFloorPlanOperationCompleted = AddressOf Me.OnSaveFloorPlanOperationCompleted
            End If
            Me.InvokeAsync("SaveFloorPlan", New Object() {id, floor_id, room_id, login_username, active, strimagebase64, strimagename, floor_plan_name}, Me.SaveFloorPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveFloorPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveFloorPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveFloorPlanCompleted(Me, New SaveFloorPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFloorPlan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteFloorPlan(ByVal id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteFloorPlan", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteFloorPlanAsync(ByVal id As String)
            Me.DeleteFloorPlanAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFloorPlanAsync(ByVal id As String, ByVal userState As Object)
            If (Me.DeleteFloorPlanOperationCompleted Is Nothing) Then
                Me.DeleteFloorPlanOperationCompleted = AddressOf Me.OnDeleteFloorPlanOperationCompleted
            End If
            Me.InvokeAsync("DeleteFloorPlan", New Object() {id}, Me.DeleteFloorPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFloorPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFloorPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFloorPlanCompleted(Me, New DeleteFloorPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadGridLayoutAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadGridLayoutAll() As String
            Dim results() As Object = Me.Invoke("LoadGridLayoutAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadGridLayoutAllAsync()
            Me.LoadGridLayoutAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadGridLayoutAllAsync(ByVal userState As Object)
            If (Me.LoadGridLayoutAllOperationCompleted Is Nothing) Then
                Me.LoadGridLayoutAllOperationCompleted = AddressOf Me.OnLoadGridLayoutAllOperationCompleted
            End If
            Me.InvokeAsync("LoadGridLayoutAll", New Object(-1) {}, Me.LoadGridLayoutAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadGridLayoutAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadGridLayoutAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadGridLayoutAllCompleted(Me, New LoadGridLayoutAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGridLayoutById", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGridLayoutById(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("GetGridLayoutById", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGridLayoutByIdAsync(ByVal id As String)
            Me.GetGridLayoutByIdAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGridLayoutByIdAsync(ByVal id As String, ByVal userState As Object)
            If (Me.GetGridLayoutByIdOperationCompleted Is Nothing) Then
                Me.GetGridLayoutByIdOperationCompleted = AddressOf Me.OnGetGridLayoutByIdOperationCompleted
            End If
            Me.InvokeAsync("GetGridLayoutById", New Object() {id}, Me.GetGridLayoutByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGridLayoutByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGridLayoutByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGridLayoutByIdCompleted(Me, New GetGridLayoutByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveGridLayout", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveGridLayout(ByVal id As String, ByVal layout_name As String, ByVal vertical_line As String, ByVal horizontal_line As String, ByVal active As String, ByVal login_username As String) As String
            Dim results() As Object = Me.Invoke("SaveGridLayout", New Object() {id, layout_name, vertical_line, horizontal_line, active, login_username})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveGridLayoutAsync(ByVal id As String, ByVal layout_name As String, ByVal vertical_line As String, ByVal horizontal_line As String, ByVal active As String, ByVal login_username As String)
            Me.SaveGridLayoutAsync(id, layout_name, vertical_line, horizontal_line, active, login_username, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveGridLayoutAsync(ByVal id As String, ByVal layout_name As String, ByVal vertical_line As String, ByVal horizontal_line As String, ByVal active As String, ByVal login_username As String, ByVal userState As Object)
            If (Me.SaveGridLayoutOperationCompleted Is Nothing) Then
                Me.SaveGridLayoutOperationCompleted = AddressOf Me.OnSaveGridLayoutOperationCompleted
            End If
            Me.InvokeAsync("SaveGridLayout", New Object() {id, layout_name, vertical_line, horizontal_line, active, login_username}, Me.SaveGridLayoutOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveGridLayoutOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveGridLayoutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveGridLayoutCompleted(Me, New SaveGridLayoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteGridLayout", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteGridLayout(ByVal id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteGridLayout", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteGridLayoutAsync(ByVal id As String)
            Me.DeleteGridLayoutAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteGridLayoutAsync(ByVal id As String, ByVal userState As Object)
            If (Me.DeleteGridLayoutOperationCompleted Is Nothing) Then
                Me.DeleteGridLayoutOperationCompleted = AddressOf Me.OnDeleteGridLayoutOperationCompleted
            End If
            Me.InvokeAsync("DeleteGridLayout", New Object() {id}, Me.DeleteGridLayoutOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteGridLayoutOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteGridLayoutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteGridLayoutCompleted(Me, New DeleteGridLayoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadLEDTVAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadLEDTVAll() As String
            Dim results() As Object = Me.Invoke("LoadLEDTVAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadLEDTVAllAsync()
            Me.LoadLEDTVAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadLEDTVAllAsync(ByVal userState As Object)
            If (Me.LoadLEDTVAllOperationCompleted Is Nothing) Then
                Me.LoadLEDTVAllOperationCompleted = AddressOf Me.OnLoadLEDTVAllOperationCompleted
            End If
            Me.InvokeAsync("LoadLEDTVAll", New Object(-1) {}, Me.LoadLEDTVAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadLEDTVAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadLEDTVAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadLEDTVAllCompleted(Me, New LoadLEDTVAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadLEDTVID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadLEDTVID(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("LoadLEDTVID", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadLEDTVIDAsync(ByVal id As String)
            Me.LoadLEDTVIDAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadLEDTVIDAsync(ByVal id As String, ByVal userState As Object)
            If (Me.LoadLEDTVIDOperationCompleted Is Nothing) Then
                Me.LoadLEDTVIDOperationCompleted = AddressOf Me.OnLoadLEDTVIDOperationCompleted
            End If
            Me.InvokeAsync("LoadLEDTVID", New Object() {id}, Me.LoadLEDTVIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadLEDTVIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadLEDTVIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadLEDTVIDCompleted(Me, New LoadLEDTVIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveLEDTV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveLEDTV(ByVal id As String, ByVal tv_name As String, ByVal install_position As String, ByVal ms_floor_id As String, ByVal ip_address As String, ByVal ms_signage_template_id_default As String, ByVal default_text_scrolling As String, ByVal text_scrolling_speed As String, ByVal active As String, ByVal login_username As String) As String
            Dim results() As Object = Me.Invoke("SaveLEDTV", New Object() {id, tv_name, install_position, ms_floor_id, ip_address, ms_signage_template_id_default, default_text_scrolling, text_scrolling_speed, active, login_username})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveLEDTVAsync(ByVal id As String, ByVal tv_name As String, ByVal install_position As String, ByVal ms_floor_id As String, ByVal ip_address As String, ByVal ms_signage_template_id_default As String, ByVal default_text_scrolling As String, ByVal text_scrolling_speed As String, ByVal active As String, ByVal login_username As String)
            Me.SaveLEDTVAsync(id, tv_name, install_position, ms_floor_id, ip_address, ms_signage_template_id_default, default_text_scrolling, text_scrolling_speed, active, login_username, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveLEDTVAsync(ByVal id As String, ByVal tv_name As String, ByVal install_position As String, ByVal ms_floor_id As String, ByVal ip_address As String, ByVal ms_signage_template_id_default As String, ByVal default_text_scrolling As String, ByVal text_scrolling_speed As String, ByVal active As String, ByVal login_username As String, ByVal userState As Object)
            If (Me.SaveLEDTVOperationCompleted Is Nothing) Then
                Me.SaveLEDTVOperationCompleted = AddressOf Me.OnSaveLEDTVOperationCompleted
            End If
            Me.InvokeAsync("SaveLEDTV", New Object() {id, tv_name, install_position, ms_floor_id, ip_address, ms_signage_template_id_default, default_text_scrolling, text_scrolling_speed, active, login_username}, Me.SaveLEDTVOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveLEDTVOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveLEDTVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveLEDTVCompleted(Me, New SaveLEDTVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteLEDTV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteLEDTV(ByVal id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteLEDTV", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteLEDTVAsync(ByVal id As String)
            Me.DeleteLEDTVAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteLEDTVAsync(ByVal id As String, ByVal userState As Object)
            If (Me.DeleteLEDTVOperationCompleted Is Nothing) Then
                Me.DeleteLEDTVOperationCompleted = AddressOf Me.OnDeleteLEDTVOperationCompleted
            End If
            Me.InvokeAsync("DeleteLEDTV", New Object() {id}, Me.DeleteLEDTVOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteLEDTVOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteLEDTVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteLEDTVCompleted(Me, New DeleteLEDTVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadLEDTVBySinageSchedule", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadLEDTVBySinageSchedule(ByVal ms_signage_template_schedule_id As String) As String
            Dim results() As Object = Me.Invoke("LoadLEDTVBySinageSchedule", New Object() {ms_signage_template_schedule_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadLEDTVBySinageScheduleAsync(ByVal ms_signage_template_schedule_id As String)
            Me.LoadLEDTVBySinageScheduleAsync(ms_signage_template_schedule_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadLEDTVBySinageScheduleAsync(ByVal ms_signage_template_schedule_id As String, ByVal userState As Object)
            If (Me.LoadLEDTVBySinageScheduleOperationCompleted Is Nothing) Then
                Me.LoadLEDTVBySinageScheduleOperationCompleted = AddressOf Me.OnLoadLEDTVBySinageScheduleOperationCompleted
            End If
            Me.InvokeAsync("LoadLEDTVBySinageSchedule", New Object() {ms_signage_template_schedule_id}, Me.LoadLEDTVBySinageScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadLEDTVBySinageScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadLEDTVBySinageScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadLEDTVBySinageScheduleCompleted(Me, New LoadLEDTVBySinageScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadLEDTVIDBySinageContent", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadLEDTVIDBySinageContent(ByVal ms_signage_template_id_default As String) As String
            Dim results() As Object = Me.Invoke("LoadLEDTVIDBySinageContent", New Object() {ms_signage_template_id_default})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadLEDTVIDBySinageContentAsync(ByVal ms_signage_template_id_default As String)
            Me.LoadLEDTVIDBySinageContentAsync(ms_signage_template_id_default, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadLEDTVIDBySinageContentAsync(ByVal ms_signage_template_id_default As String, ByVal userState As Object)
            If (Me.LoadLEDTVIDBySinageContentOperationCompleted Is Nothing) Then
                Me.LoadLEDTVIDBySinageContentOperationCompleted = AddressOf Me.OnLoadLEDTVIDBySinageContentOperationCompleted
            End If
            Me.InvokeAsync("LoadLEDTVIDBySinageContent", New Object() {ms_signage_template_id_default}, Me.LoadLEDTVIDBySinageContentOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadLEDTVIDBySinageContentOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadLEDTVIDBySinageContentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadLEDTVIDBySinageContentCompleted(Me, New LoadLEDTVIDBySinageContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadObjectveBySpeedway", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadObjectveBySpeedway(ByVal speedway_id As String) As String
            Dim results() As Object = Me.Invoke("LoadObjectveBySpeedway", New Object() {speedway_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadObjectveBySpeedwayAsync(ByVal speedway_id As String)
            Me.LoadObjectveBySpeedwayAsync(speedway_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadObjectveBySpeedwayAsync(ByVal speedway_id As String, ByVal userState As Object)
            If (Me.LoadObjectveBySpeedwayOperationCompleted Is Nothing) Then
                Me.LoadObjectveBySpeedwayOperationCompleted = AddressOf Me.OnLoadObjectveBySpeedwayOperationCompleted
            End If
            Me.InvokeAsync("LoadObjectveBySpeedway", New Object() {speedway_id}, Me.LoadObjectveBySpeedwayOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadObjectveBySpeedwayOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadObjectveBySpeedwayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadObjectveBySpeedwayCompleted(Me, New LoadObjectveBySpeedwayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadPatentTypeAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadPatentTypeAll() As String
            Dim results() As Object = Me.Invoke("LoadPatentTypeAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadPatentTypeAllAsync()
            Me.LoadPatentTypeAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadPatentTypeAllAsync(ByVal userState As Object)
            If (Me.LoadPatentTypeAllOperationCompleted Is Nothing) Then
                Me.LoadPatentTypeAllOperationCompleted = AddressOf Me.OnLoadPatentTypeAllOperationCompleted
            End If
            Me.InvokeAsync("LoadPatentTypeAll", New Object(-1) {}, Me.LoadPatentTypeAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadPatentTypeAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadPatentTypeAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadPatentTypeAllCompleted(Me, New LoadPatentTypeAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatentTypeById", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPatentTypeById(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("GetPatentTypeById", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPatentTypeByIdAsync(ByVal id As String)
            Me.GetPatentTypeByIdAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPatentTypeByIdAsync(ByVal id As String, ByVal userState As Object)
            If (Me.GetPatentTypeByIdOperationCompleted Is Nothing) Then
                Me.GetPatentTypeByIdOperationCompleted = AddressOf Me.OnGetPatentTypeByIdOperationCompleted
            End If
            Me.InvokeAsync("GetPatentTypeById", New Object() {id}, Me.GetPatentTypeByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPatentTypeByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPatentTypeByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPatentTypeByIdCompleted(Me, New GetPatentTypeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePatentType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SavePatentType(ByVal id As String, ByVal patent_type_code As String, ByVal patent_type_name As String, ByVal active As String, ByVal login_username As String) As String
            Dim results() As Object = Me.Invoke("SavePatentType", New Object() {id, patent_type_code, patent_type_name, active, login_username})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SavePatentTypeAsync(ByVal id As String, ByVal patent_type_code As String, ByVal patent_type_name As String, ByVal active As String, ByVal login_username As String)
            Me.SavePatentTypeAsync(id, patent_type_code, patent_type_name, active, login_username, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SavePatentTypeAsync(ByVal id As String, ByVal patent_type_code As String, ByVal patent_type_name As String, ByVal active As String, ByVal login_username As String, ByVal userState As Object)
            If (Me.SavePatentTypeOperationCompleted Is Nothing) Then
                Me.SavePatentTypeOperationCompleted = AddressOf Me.OnSavePatentTypeOperationCompleted
            End If
            Me.InvokeAsync("SavePatentType", New Object() {id, patent_type_code, patent_type_name, active, login_username}, Me.SavePatentTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSavePatentTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SavePatentTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SavePatentTypeCompleted(Me, New SavePatentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatentType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeletePatentType(ByVal id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeletePatentType", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeletePatentTypeAsync(ByVal id As String)
            Me.DeletePatentTypeAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePatentTypeAsync(ByVal id As String, ByVal userState As Object)
            If (Me.DeletePatentTypeOperationCompleted Is Nothing) Then
                Me.DeletePatentTypeOperationCompleted = AddressOf Me.OnDeletePatentTypeOperationCompleted
            End If
            Me.InvokeAsync("DeletePatentType", New Object() {id}, Me.DeletePatentTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletePatentTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletePatentTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletePatentTypeCompleted(Me, New DeletePatentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadPosition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadPosition() As String
            Dim results() As Object = Me.Invoke("LoadPosition", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadPositionAsync()
            Me.LoadPositionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadPositionAsync(ByVal userState As Object)
            If (Me.LoadPositionOperationCompleted Is Nothing) Then
                Me.LoadPositionOperationCompleted = AddressOf Me.OnLoadPositionOperationCompleted
            End If
            Me.InvokeAsync("LoadPosition", New Object(-1) {}, Me.LoadPositionOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadPositionOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadPositionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadPositionCompleted(Me, New LoadPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadPositionByUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadPositionByUser(ByVal user_id As String) As String
            Dim results() As Object = Me.Invoke("LoadPositionByUser", New Object() {user_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadPositionByUserAsync(ByVal user_id As String)
            Me.LoadPositionByUserAsync(user_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadPositionByUserAsync(ByVal user_id As String, ByVal userState As Object)
            If (Me.LoadPositionByUserOperationCompleted Is Nothing) Then
                Me.LoadPositionByUserOperationCompleted = AddressOf Me.OnLoadPositionByUserOperationCompleted
            End If
            Me.InvokeAsync("LoadPositionByUser", New Object() {user_id}, Me.LoadPositionByUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadPositionByUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadPositionByUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadPositionByUserCompleted(Me, New LoadPositionByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadTitleAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadTitleAll() As String
            Dim results() As Object = Me.Invoke("LoadTitleAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadTitleAllAsync()
            Me.LoadTitleAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadTitleAllAsync(ByVal userState As Object)
            If (Me.LoadTitleAllOperationCompleted Is Nothing) Then
                Me.LoadTitleAllOperationCompleted = AddressOf Me.OnLoadTitleAllOperationCompleted
            End If
            Me.InvokeAsync("LoadTitleAll", New Object(-1) {}, Me.LoadTitleAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadTitleAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadTitleAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadTitleAllCompleted(Me, New LoadTitleAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadTitleByUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadTitleByUser(ByVal user_id As String) As String
            Dim results() As Object = Me.Invoke("LoadTitleByUser", New Object() {user_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadTitleByUserAsync(ByVal user_id As String)
            Me.LoadTitleByUserAsync(user_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadTitleByUserAsync(ByVal user_id As String, ByVal userState As Object)
            If (Me.LoadTitleByUserOperationCompleted Is Nothing) Then
                Me.LoadTitleByUserOperationCompleted = AddressOf Me.OnLoadTitleByUserOperationCompleted
            End If
            Me.InvokeAsync("LoadTitleByUser", New Object() {user_id}, Me.LoadTitleByUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadTitleByUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadTitleByUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadTitleByUserCompleted(Me, New LoadTitleByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadRoomAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadRoomAll() As String
            Dim results() As Object = Me.Invoke("LoadRoomAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadRoomAllAsync()
            Me.LoadRoomAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadRoomAllAsync(ByVal userState As Object)
            If (Me.LoadRoomAllOperationCompleted Is Nothing) Then
                Me.LoadRoomAllOperationCompleted = AddressOf Me.OnLoadRoomAllOperationCompleted
            End If
            Me.InvokeAsync("LoadRoomAll", New Object(-1) {}, Me.LoadRoomAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadRoomAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadRoomAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadRoomAllCompleted(Me, New LoadRoomAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadRoomByFloorPlan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadRoomByFloorPlan(ByVal floor_plan_id As String) As String
            Dim results() As Object = Me.Invoke("LoadRoomByFloorPlan", New Object() {floor_plan_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadRoomByFloorPlanAsync(ByVal floor_plan_id As String)
            Me.LoadRoomByFloorPlanAsync(floor_plan_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadRoomByFloorPlanAsync(ByVal floor_plan_id As String, ByVal userState As Object)
            If (Me.LoadRoomByFloorPlanOperationCompleted Is Nothing) Then
                Me.LoadRoomByFloorPlanOperationCompleted = AddressOf Me.OnLoadRoomByFloorPlanOperationCompleted
            End If
            Me.InvokeAsync("LoadRoomByFloorPlan", New Object() {floor_plan_id}, Me.LoadRoomByFloorPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadRoomByFloorPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadRoomByFloorPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadRoomByFloorPlanCompleted(Me, New LoadRoomByFloorPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadRoomByDesktop", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadRoomByDesktop(ByVal desktop_id As String) As String
            Dim results() As Object = Me.Invoke("LoadRoomByDesktop", New Object() {desktop_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadRoomByDesktopAsync(ByVal desktop_id As String)
            Me.LoadRoomByDesktopAsync(desktop_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadRoomByDesktopAsync(ByVal desktop_id As String, ByVal userState As Object)
            If (Me.LoadRoomByDesktopOperationCompleted Is Nothing) Then
                Me.LoadRoomByDesktopOperationCompleted = AddressOf Me.OnLoadRoomByDesktopOperationCompleted
            End If
            Me.InvokeAsync("LoadRoomByDesktop", New Object() {desktop_id}, Me.LoadRoomByDesktopOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadRoomByDesktopOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadRoomByDesktopCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadRoomByDesktopCompleted(Me, New LoadRoomByDesktopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadRoomByFloor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadRoomByFloor(ByVal floor_id As String) As String
            Dim results() As Object = Me.Invoke("LoadRoomByFloor", New Object() {floor_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadRoomByFloorAsync(ByVal floor_id As String)
            Me.LoadRoomByFloorAsync(floor_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadRoomByFloorAsync(ByVal floor_id As String, ByVal userState As Object)
            If (Me.LoadRoomByFloorOperationCompleted Is Nothing) Then
                Me.LoadRoomByFloorOperationCompleted = AddressOf Me.OnLoadRoomByFloorOperationCompleted
            End If
            Me.InvokeAsync("LoadRoomByFloor", New Object() {floor_id}, Me.LoadRoomByFloorOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadRoomByFloorOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadRoomByFloorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadRoomByFloorCompleted(Me, New LoadRoomByFloorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadRoomBySpeedway", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadRoomBySpeedway(ByVal speedway_id As String) As String
            Dim results() As Object = Me.Invoke("LoadRoomBySpeedway", New Object() {speedway_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadRoomBySpeedwayAsync(ByVal speedway_id As String)
            Me.LoadRoomBySpeedwayAsync(speedway_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadRoomBySpeedwayAsync(ByVal speedway_id As String, ByVal userState As Object)
            If (Me.LoadRoomBySpeedwayOperationCompleted Is Nothing) Then
                Me.LoadRoomBySpeedwayOperationCompleted = AddressOf Me.OnLoadRoomBySpeedwayOperationCompleted
            End If
            Me.InvokeAsync("LoadRoomBySpeedway", New Object() {speedway_id}, Me.LoadRoomBySpeedwayOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadRoomBySpeedwayOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadRoomBySpeedwayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadRoomBySpeedwayCompleted(Me, New LoadRoomBySpeedwayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadUserAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadUserAll() As String
            Dim results() As Object = Me.Invoke("LoadUserAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadUserAllAsync()
            Me.LoadUserAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadUserAllAsync(ByVal userState As Object)
            If (Me.LoadUserAllOperationCompleted Is Nothing) Then
                Me.LoadUserAllOperationCompleted = AddressOf Me.OnLoadUserAllOperationCompleted
            End If
            Me.InvokeAsync("LoadUserAll", New Object(-1) {}, Me.LoadUserAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadUserAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadUserAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadUserAllCompleted(Me, New LoadUserAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadUserByName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadUserByName(ByVal name As String) As String
            Dim results() As Object = Me.Invoke("LoadUserByName", New Object() {name})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadUserByNameAsync(ByVal name As String)
            Me.LoadUserByNameAsync(name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadUserByNameAsync(ByVal name As String, ByVal userState As Object)
            If (Me.LoadUserByNameOperationCompleted Is Nothing) Then
                Me.LoadUserByNameOperationCompleted = AddressOf Me.OnLoadUserByNameOperationCompleted
            End If
            Me.InvokeAsync("LoadUserByName", New Object() {name}, Me.LoadUserByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadUserByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadUserByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadUserByNameCompleted(Me, New LoadUserByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserById", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserById(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("GetUserById", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserByIdAsync(ByVal id As String)
            Me.GetUserByIdAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserByIdAsync(ByVal id As String, ByVal userState As Object)
            If (Me.GetUserByIdOperationCompleted Is Nothing) Then
                Me.GetUserByIdOperationCompleted = AddressOf Me.OnGetUserByIdOperationCompleted
            End If
            Me.InvokeAsync("GetUserById", New Object() {id}, Me.GetUserByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserByIdCompleted(Me, New GetUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveUser(ByVal id As String, ByVal title_id As String, ByVal name As String, ByVal surname As String, ByVal department_id As String, ByVal position_id As String, ByVal username As String, ByVal password As String, ByVal login_username As String) As String
            Dim results() As Object = Me.Invoke("SaveUser", New Object() {id, title_id, name, surname, department_id, position_id, username, password, login_username})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveUserAsync(ByVal id As String, ByVal title_id As String, ByVal name As String, ByVal surname As String, ByVal department_id As String, ByVal position_id As String, ByVal username As String, ByVal password As String, ByVal login_username As String)
            Me.SaveUserAsync(id, title_id, name, surname, department_id, position_id, username, password, login_username, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveUserAsync(ByVal id As String, ByVal title_id As String, ByVal name As String, ByVal surname As String, ByVal department_id As String, ByVal position_id As String, ByVal username As String, ByVal password As String, ByVal login_username As String, ByVal userState As Object)
            If (Me.SaveUserOperationCompleted Is Nothing) Then
                Me.SaveUserOperationCompleted = AddressOf Me.OnSaveUserOperationCompleted
            End If
            Me.InvokeAsync("SaveUser", New Object() {id, title_id, name, surname, department_id, position_id, username, password, login_username}, Me.SaveUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveUserCompleted(Me, New SaveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteUser(ByVal id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteUser", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAsync(ByVal id As String)
            Me.DeleteUserAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAsync(ByVal id As String, ByVal userState As Object)
            If (Me.DeleteUserOperationCompleted Is Nothing) Then
                Me.DeleteUserOperationCompleted = AddressOf Me.OnDeleteUserOperationCompleted
            End If
            Me.InvokeAsync("DeleteUser", New Object() {id}, Me.DeleteUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUserCompleted(Me, New DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSignageContentByLEDTV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSignageContentByLEDTV(ByVal ledtv_id As String) As String
            Dim results() As Object = Me.Invoke("LoadSignageContentByLEDTV", New Object() {ledtv_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSignageContentByLEDTVAsync(ByVal ledtv_id As String)
            Me.LoadSignageContentByLEDTVAsync(ledtv_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSignageContentByLEDTVAsync(ByVal ledtv_id As String, ByVal userState As Object)
            If (Me.LoadSignageContentByLEDTVOperationCompleted Is Nothing) Then
                Me.LoadSignageContentByLEDTVOperationCompleted = AddressOf Me.OnLoadSignageContentByLEDTVOperationCompleted
            End If
            Me.InvokeAsync("LoadSignageContentByLEDTV", New Object() {ledtv_id}, Me.LoadSignageContentByLEDTVOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSignageContentByLEDTVOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSignageContentByLEDTVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSignageContentByLEDTVCompleted(Me, New LoadSignageContentByLEDTVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSignageContentBySignageSchedule", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSignageContentBySignageSchedule(ByVal ms_signage_template_schedule_id As String) As String
            Dim results() As Object = Me.Invoke("LoadSignageContentBySignageSchedule", New Object() {ms_signage_template_schedule_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSignageContentBySignageScheduleAsync(ByVal ms_signage_template_schedule_id As String)
            Me.LoadSignageContentBySignageScheduleAsync(ms_signage_template_schedule_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSignageContentBySignageScheduleAsync(ByVal ms_signage_template_schedule_id As String, ByVal userState As Object)
            If (Me.LoadSignageContentBySignageScheduleOperationCompleted Is Nothing) Then
                Me.LoadSignageContentBySignageScheduleOperationCompleted = AddressOf Me.OnLoadSignageContentBySignageScheduleOperationCompleted
            End If
            Me.InvokeAsync("LoadSignageContentBySignageSchedule", New Object() {ms_signage_template_schedule_id}, Me.LoadSignageContentBySignageScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSignageContentBySignageScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSignageContentBySignageScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSignageContentBySignageScheduleCompleted(Me, New LoadSignageContentBySignageScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSpeedwayAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSpeedwayAll() As String
            Dim results() As Object = Me.Invoke("LoadSpeedwayAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedwayAllAsync()
            Me.LoadSpeedwayAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedwayAllAsync(ByVal userState As Object)
            If (Me.LoadSpeedwayAllOperationCompleted Is Nothing) Then
                Me.LoadSpeedwayAllOperationCompleted = AddressOf Me.OnLoadSpeedwayAllOperationCompleted
            End If
            Me.InvokeAsync("LoadSpeedwayAll", New Object(-1) {}, Me.LoadSpeedwayAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSpeedwayAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSpeedwayAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSpeedwayAllCompleted(Me, New LoadSpeedwayAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSpeedwayByID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSpeedwayByID(ByVal speedway_id As String) As String
            Dim results() As Object = Me.Invoke("LoadSpeedwayByID", New Object() {speedway_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedwayByIDAsync(ByVal speedway_id As String)
            Me.LoadSpeedwayByIDAsync(speedway_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedwayByIDAsync(ByVal speedway_id As String, ByVal userState As Object)
            If (Me.LoadSpeedwayByIDOperationCompleted Is Nothing) Then
                Me.LoadSpeedwayByIDOperationCompleted = AddressOf Me.OnLoadSpeedwayByIDOperationCompleted
            End If
            Me.InvokeAsync("LoadSpeedwayByID", New Object() {speedway_id}, Me.LoadSpeedwayByIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSpeedwayByIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSpeedwayByIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSpeedwayByIDCompleted(Me, New LoadSpeedwayByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSpeedway", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveSpeedway( _
                    ByVal id As String,  _
                    ByVal login_username As String,  _
                    ByVal serial_no As String,  _
                    ByVal ip_address As String,  _
                    ByVal install_position As String,  _
                    ByVal setting_label As String,  _
                    ByVal setting_description As String,  _
                    ByVal setting_session As String,  _
                    ByVal setting_tag_populate_estimate As String,  _
                    ByVal keepalive_period_in_ms As String,  _
                    ByVal keepalive_link_down_threshold As String,  _
                    ByVal field_ping_interval_in_ms As String,  _
                    ByVal emptry_field_timeout_in_ms As String,  _
                    ByVal active_status As String,  _
                    ByVal setting_time_correct_enabled As String,  _
                    ByVal keepalive_is_enabled As String,  _
                    ByVal mld_is_enable As String,  _
                    ByVal include_peak_rssi As String,  _
                    ByVal include_antenna_port_number As String,  _
                    ByVal include_first_seen_time As String,  _
                    ByVal include_last_seen_time As String,  _
                    ByVal include_seen_count As String,  _
                    ByVal include_channel As String,  _
                    ByVal include_phase_angle As String,  _
                    ByVal include_serialized_tid As String,  _
                    ByVal ms_speedway_objective_id As String,  _
                    ByVal ms_room_id As String,  _
                    ByVal setting_search_mode As String,  _
                    ByVal filters_mode As String,  _
                    ByVal report_mode As String,  _
                    ByVal jsonobject_antenna As Object,  _
                    ByVal jsonobject_gpi As Object,  _
                    ByVal jsonobject_tagfilter As Object) As String
            Dim results() As Object = Me.Invoke("SaveSpeedway", New Object() {id, login_username, serial_no, ip_address, install_position, setting_label, setting_description, setting_session, setting_tag_populate_estimate, keepalive_period_in_ms, keepalive_link_down_threshold, field_ping_interval_in_ms, emptry_field_timeout_in_ms, active_status, setting_time_correct_enabled, keepalive_is_enabled, mld_is_enable, include_peak_rssi, include_antenna_port_number, include_first_seen_time, include_last_seen_time, include_seen_count, include_channel, include_phase_angle, include_serialized_tid, ms_speedway_objective_id, ms_room_id, setting_search_mode, filters_mode, report_mode, jsonobject_antenna, jsonobject_gpi, jsonobject_tagfilter})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveSpeedwayAsync( _
                    ByVal id As String,  _
                    ByVal login_username As String,  _
                    ByVal serial_no As String,  _
                    ByVal ip_address As String,  _
                    ByVal install_position As String,  _
                    ByVal setting_label As String,  _
                    ByVal setting_description As String,  _
                    ByVal setting_session As String,  _
                    ByVal setting_tag_populate_estimate As String,  _
                    ByVal keepalive_period_in_ms As String,  _
                    ByVal keepalive_link_down_threshold As String,  _
                    ByVal field_ping_interval_in_ms As String,  _
                    ByVal emptry_field_timeout_in_ms As String,  _
                    ByVal active_status As String,  _
                    ByVal setting_time_correct_enabled As String,  _
                    ByVal keepalive_is_enabled As String,  _
                    ByVal mld_is_enable As String,  _
                    ByVal include_peak_rssi As String,  _
                    ByVal include_antenna_port_number As String,  _
                    ByVal include_first_seen_time As String,  _
                    ByVal include_last_seen_time As String,  _
                    ByVal include_seen_count As String,  _
                    ByVal include_channel As String,  _
                    ByVal include_phase_angle As String,  _
                    ByVal include_serialized_tid As String,  _
                    ByVal ms_speedway_objective_id As String,  _
                    ByVal ms_room_id As String,  _
                    ByVal setting_search_mode As String,  _
                    ByVal filters_mode As String,  _
                    ByVal report_mode As String,  _
                    ByVal jsonobject_antenna As Object,  _
                    ByVal jsonobject_gpi As Object,  _
                    ByVal jsonobject_tagfilter As Object)
            Me.SaveSpeedwayAsync(id, login_username, serial_no, ip_address, install_position, setting_label, setting_description, setting_session, setting_tag_populate_estimate, keepalive_period_in_ms, keepalive_link_down_threshold, field_ping_interval_in_ms, emptry_field_timeout_in_ms, active_status, setting_time_correct_enabled, keepalive_is_enabled, mld_is_enable, include_peak_rssi, include_antenna_port_number, include_first_seen_time, include_last_seen_time, include_seen_count, include_channel, include_phase_angle, include_serialized_tid, ms_speedway_objective_id, ms_room_id, setting_search_mode, filters_mode, report_mode, jsonobject_antenna, jsonobject_gpi, jsonobject_tagfilter, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveSpeedwayAsync( _
                    ByVal id As String,  _
                    ByVal login_username As String,  _
                    ByVal serial_no As String,  _
                    ByVal ip_address As String,  _
                    ByVal install_position As String,  _
                    ByVal setting_label As String,  _
                    ByVal setting_description As String,  _
                    ByVal setting_session As String,  _
                    ByVal setting_tag_populate_estimate As String,  _
                    ByVal keepalive_period_in_ms As String,  _
                    ByVal keepalive_link_down_threshold As String,  _
                    ByVal field_ping_interval_in_ms As String,  _
                    ByVal emptry_field_timeout_in_ms As String,  _
                    ByVal active_status As String,  _
                    ByVal setting_time_correct_enabled As String,  _
                    ByVal keepalive_is_enabled As String,  _
                    ByVal mld_is_enable As String,  _
                    ByVal include_peak_rssi As String,  _
                    ByVal include_antenna_port_number As String,  _
                    ByVal include_first_seen_time As String,  _
                    ByVal include_last_seen_time As String,  _
                    ByVal include_seen_count As String,  _
                    ByVal include_channel As String,  _
                    ByVal include_phase_angle As String,  _
                    ByVal include_serialized_tid As String,  _
                    ByVal ms_speedway_objective_id As String,  _
                    ByVal ms_room_id As String,  _
                    ByVal setting_search_mode As String,  _
                    ByVal filters_mode As String,  _
                    ByVal report_mode As String,  _
                    ByVal jsonobject_antenna As Object,  _
                    ByVal jsonobject_gpi As Object,  _
                    ByVal jsonobject_tagfilter As Object,  _
                    ByVal userState As Object)
            If (Me.SaveSpeedwayOperationCompleted Is Nothing) Then
                Me.SaveSpeedwayOperationCompleted = AddressOf Me.OnSaveSpeedwayOperationCompleted
            End If
            Me.InvokeAsync("SaveSpeedway", New Object() {id, login_username, serial_no, ip_address, install_position, setting_label, setting_description, setting_session, setting_tag_populate_estimate, keepalive_period_in_ms, keepalive_link_down_threshold, field_ping_interval_in_ms, emptry_field_timeout_in_ms, active_status, setting_time_correct_enabled, keepalive_is_enabled, mld_is_enable, include_peak_rssi, include_antenna_port_number, include_first_seen_time, include_last_seen_time, include_seen_count, include_channel, include_phase_angle, include_serialized_tid, ms_speedway_objective_id, ms_room_id, setting_search_mode, filters_mode, report_mode, jsonobject_antenna, jsonobject_gpi, jsonobject_tagfilter}, Me.SaveSpeedwayOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveSpeedwayOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveSpeedwayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveSpeedwayCompleted(Me, New SaveSpeedwayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpeedwayDefaultMaxGPI", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSpeedwayDefaultMaxGPI() As Integer
            Dim results() As Object = Me.Invoke("GetSpeedwayDefaultMaxGPI", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSpeedwayDefaultMaxGPIAsync()
            Me.GetSpeedwayDefaultMaxGPIAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSpeedwayDefaultMaxGPIAsync(ByVal userState As Object)
            If (Me.GetSpeedwayDefaultMaxGPIOperationCompleted Is Nothing) Then
                Me.GetSpeedwayDefaultMaxGPIOperationCompleted = AddressOf Me.OnGetSpeedwayDefaultMaxGPIOperationCompleted
            End If
            Me.InvokeAsync("GetSpeedwayDefaultMaxGPI", New Object(-1) {}, Me.GetSpeedwayDefaultMaxGPIOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSpeedwayDefaultMaxGPIOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSpeedwayDefaultMaxGPICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSpeedwayDefaultMaxGPICompleted(Me, New GetSpeedwayDefaultMaxGPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpeedwayDefaultMaxAnt", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSpeedwayDefaultMaxAnt() As Integer
            Dim results() As Object = Me.Invoke("GetSpeedwayDefaultMaxAnt", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSpeedwayDefaultMaxAntAsync()
            Me.GetSpeedwayDefaultMaxAntAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSpeedwayDefaultMaxAntAsync(ByVal userState As Object)
            If (Me.GetSpeedwayDefaultMaxAntOperationCompleted Is Nothing) Then
                Me.GetSpeedwayDefaultMaxAntOperationCompleted = AddressOf Me.OnGetSpeedwayDefaultMaxAntOperationCompleted
            End If
            Me.InvokeAsync("GetSpeedwayDefaultMaxAnt", New Object(-1) {}, Me.GetSpeedwayDefaultMaxAntOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSpeedwayDefaultMaxAntOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSpeedwayDefaultMaxAntCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSpeedwayDefaultMaxAntCompleted(Me, New GetSpeedwayDefaultMaxAntCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSpeedway", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteSpeedway(ByVal id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteSpeedway", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteSpeedwayAsync(ByVal id As String)
            Me.DeleteSpeedwayAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSpeedwayAsync(ByVal id As String, ByVal userState As Object)
            If (Me.DeleteSpeedwayOperationCompleted Is Nothing) Then
                Me.DeleteSpeedwayOperationCompleted = AddressOf Me.OnDeleteSpeedwayOperationCompleted
            End If
            Me.InvokeAsync("DeleteSpeedway", New Object() {id}, Me.DeleteSpeedwayOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSpeedwayOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSpeedwayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSpeedwayCompleted(Me, New DeleteSpeedwayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSearchMode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSearchMode(ByVal SearchMode As String) As String
            Dim results() As Object = Me.Invoke("LoadSearchMode", New Object() {SearchMode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSearchModeAsync(ByVal SearchMode As String)
            Me.LoadSearchModeAsync(SearchMode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSearchModeAsync(ByVal SearchMode As String, ByVal userState As Object)
            If (Me.LoadSearchModeOperationCompleted Is Nothing) Then
                Me.LoadSearchModeOperationCompleted = AddressOf Me.OnLoadSearchModeOperationCompleted
            End If
            Me.InvokeAsync("LoadSearchMode", New Object() {SearchMode}, Me.LoadSearchModeOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSearchModeOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSearchModeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSearchModeCompleted(Me, New LoadSearchModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFilterMode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadFilterMode(ByVal FilterMode As String) As String
            Dim results() As Object = Me.Invoke("LoadFilterMode", New Object() {FilterMode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadFilterModeAsync(ByVal FilterMode As String)
            Me.LoadFilterModeAsync(FilterMode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadFilterModeAsync(ByVal FilterMode As String, ByVal userState As Object)
            If (Me.LoadFilterModeOperationCompleted Is Nothing) Then
                Me.LoadFilterModeOperationCompleted = AddressOf Me.OnLoadFilterModeOperationCompleted
            End If
            Me.InvokeAsync("LoadFilterMode", New Object() {FilterMode}, Me.LoadFilterModeOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadFilterModeOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadFilterModeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadFilterModeCompleted(Me, New LoadFilterModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadReportMode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadReportMode(ByVal ReportMode As String) As String
            Dim results() As Object = Me.Invoke("LoadReportMode", New Object() {ReportMode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadReportModeAsync(ByVal ReportMode As String)
            Me.LoadReportModeAsync(ReportMode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadReportModeAsync(ByVal ReportMode As String, ByVal userState As Object)
            If (Me.LoadReportModeOperationCompleted Is Nothing) Then
                Me.LoadReportModeOperationCompleted = AddressOf Me.OnLoadReportModeOperationCompleted
            End If
            Me.InvokeAsync("LoadReportMode", New Object() {ReportMode}, Me.LoadReportModeOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadReportModeOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadReportModeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadReportModeCompleted(Me, New LoadReportModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAutoStartMode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadAutoStartMode(ByVal AutoStartMode As String) As String
            Dim results() As Object = Me.Invoke("LoadAutoStartMode", New Object() {AutoStartMode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadAutoStartModeAsync(ByVal AutoStartMode As String)
            Me.LoadAutoStartModeAsync(AutoStartMode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadAutoStartModeAsync(ByVal AutoStartMode As String, ByVal userState As Object)
            If (Me.LoadAutoStartModeOperationCompleted Is Nothing) Then
                Me.LoadAutoStartModeOperationCompleted = AddressOf Me.OnLoadAutoStartModeOperationCompleted
            End If
            Me.InvokeAsync("LoadAutoStartMode", New Object() {AutoStartMode}, Me.LoadAutoStartModeOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadAutoStartModeOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadAutoStartModeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadAutoStartModeCompleted(Me, New LoadAutoStartModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadGPILevel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadGPILevel(ByVal GPILevel As String) As String
            Dim results() As Object = Me.Invoke("LoadGPILevel", New Object() {GPILevel})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadGPILevelAsync(ByVal GPILevel As String)
            Me.LoadGPILevelAsync(GPILevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadGPILevelAsync(ByVal GPILevel As String, ByVal userState As Object)
            If (Me.LoadGPILevelOperationCompleted Is Nothing) Then
                Me.LoadGPILevelOperationCompleted = AddressOf Me.OnLoadGPILevelOperationCompleted
            End If
            Me.InvokeAsync("LoadGPILevel", New Object() {GPILevel}, Me.LoadGPILevelOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadGPILevelOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadGPILevelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadGPILevelCompleted(Me, New LoadGPILevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAutoStopMode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadAutoStopMode(ByVal AutoStopMode As String) As String
            Dim results() As Object = Me.Invoke("LoadAutoStopMode", New Object() {AutoStopMode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadAutoStopModeAsync(ByVal AutoStopMode As String)
            Me.LoadAutoStopModeAsync(AutoStopMode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadAutoStopModeAsync(ByVal AutoStopMode As String, ByVal userState As Object)
            If (Me.LoadAutoStopModeOperationCompleted Is Nothing) Then
                Me.LoadAutoStopModeOperationCompleted = AddressOf Me.OnLoadAutoStopModeOperationCompleted
            End If
            Me.InvokeAsync("LoadAutoStopMode", New Object() {AutoStopMode}, Me.LoadAutoStopModeOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadAutoStopModeOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadAutoStopModeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadAutoStopModeCompleted(Me, New LoadAutoStopModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadMemoryBank", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadMemoryBank(ByVal MemoryBank As String) As String
            Dim results() As Object = Me.Invoke("LoadMemoryBank", New Object() {MemoryBank})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadMemoryBankAsync(ByVal MemoryBank As String)
            Me.LoadMemoryBankAsync(MemoryBank, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadMemoryBankAsync(ByVal MemoryBank As String, ByVal userState As Object)
            If (Me.LoadMemoryBankOperationCompleted Is Nothing) Then
                Me.LoadMemoryBankOperationCompleted = AddressOf Me.OnLoadMemoryBankOperationCompleted
            End If
            Me.InvokeAsync("LoadMemoryBank", New Object() {MemoryBank}, Me.LoadMemoryBankOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadMemoryBankOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadMemoryBankCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadMemoryBankCompleted(Me, New LoadMemoryBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFilterOp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadFilterOp(ByVal FilterOp As String) As String
            Dim results() As Object = Me.Invoke("LoadFilterOp", New Object() {FilterOp})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadFilterOpAsync(ByVal FilterOp As String)
            Me.LoadFilterOpAsync(FilterOp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadFilterOpAsync(ByVal FilterOp As String, ByVal userState As Object)
            If (Me.LoadFilterOpOperationCompleted Is Nothing) Then
                Me.LoadFilterOpOperationCompleted = AddressOf Me.OnLoadFilterOpOperationCompleted
            End If
            Me.InvokeAsync("LoadFilterOp", New Object() {FilterOp}, Me.LoadFilterOpOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadFilterOpOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadFilterOpCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadFilterOpCompleted(Me, New LoadFilterOpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSpeedwayAntenna", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSpeedwayAntenna(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("LoadSpeedwayAntenna", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedwayAntennaAsync(ByVal id As String)
            Me.LoadSpeedwayAntennaAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedwayAntennaAsync(ByVal id As String, ByVal userState As Object)
            If (Me.LoadSpeedwayAntennaOperationCompleted Is Nothing) Then
                Me.LoadSpeedwayAntennaOperationCompleted = AddressOf Me.OnLoadSpeedwayAntennaOperationCompleted
            End If
            Me.InvokeAsync("LoadSpeedwayAntenna", New Object() {id}, Me.LoadSpeedwayAntennaOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSpeedwayAntennaOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSpeedwayAntennaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSpeedwayAntennaCompleted(Me, New LoadSpeedwayAntennaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSpeedwayGPI", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSpeedwayGPI(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("LoadSpeedwayGPI", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedwayGPIAsync(ByVal id As String)
            Me.LoadSpeedwayGPIAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedwayGPIAsync(ByVal id As String, ByVal userState As Object)
            If (Me.LoadSpeedwayGPIOperationCompleted Is Nothing) Then
                Me.LoadSpeedwayGPIOperationCompleted = AddressOf Me.OnLoadSpeedwayGPIOperationCompleted
            End If
            Me.InvokeAsync("LoadSpeedwayGPI", New Object() {id}, Me.LoadSpeedwayGPIOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSpeedwayGPIOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSpeedwayGPICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSpeedwayGPICompleted(Me, New LoadSpeedwayGPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadSpeedwayTagFilter", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadSpeedwayTagFilter(ByVal id As String) As String
            Dim results() As Object = Me.Invoke("LoadSpeedwayTagFilter", New Object() {id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedwayTagFilterAsync(ByVal id As String)
            Me.LoadSpeedwayTagFilterAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadSpeedwayTagFilterAsync(ByVal id As String, ByVal userState As Object)
            If (Me.LoadSpeedwayTagFilterOperationCompleted Is Nothing) Then
                Me.LoadSpeedwayTagFilterOperationCompleted = AddressOf Me.OnLoadSpeedwayTagFilterOperationCompleted
            End If
            Me.InvokeAsync("LoadSpeedwayTagFilter", New Object() {id}, Me.LoadSpeedwayTagFilterOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadSpeedwayTagFilterOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadSpeedwayTagFilterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadSpeedwayTagFilterCompleted(Me, New LoadSpeedwayTagFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserMapAuthorizeGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserMapAuthorizeGroup(ByVal groupid As String) As String
            Dim results() As Object = Me.Invoke("GetUserMapAuthorizeGroup", New Object() {groupid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserMapAuthorizeGroupAsync(ByVal groupid As String)
            Me.GetUserMapAuthorizeGroupAsync(groupid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserMapAuthorizeGroupAsync(ByVal groupid As String, ByVal userState As Object)
            If (Me.GetUserMapAuthorizeGroupOperationCompleted Is Nothing) Then
                Me.GetUserMapAuthorizeGroupOperationCompleted = AddressOf Me.OnGetUserMapAuthorizeGroupOperationCompleted
            End If
            Me.InvokeAsync("GetUserMapAuthorizeGroup", New Object() {groupid}, Me.GetUserMapAuthorizeGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserMapAuthorizeGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserMapAuthorizeGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserMapAuthorizeGroupCompleted(Me, New GetUserMapAuthorizeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNotUserMapAuthorizeGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNotUserMapAuthorizeGroup(ByVal name As String) As String
            Dim results() As Object = Me.Invoke("GetNotUserMapAuthorizeGroup", New Object() {name})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNotUserMapAuthorizeGroupAsync(ByVal name As String)
            Me.GetNotUserMapAuthorizeGroupAsync(name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNotUserMapAuthorizeGroupAsync(ByVal name As String, ByVal userState As Object)
            If (Me.GetNotUserMapAuthorizeGroupOperationCompleted Is Nothing) Then
                Me.GetNotUserMapAuthorizeGroupOperationCompleted = AddressOf Me.OnGetNotUserMapAuthorizeGroupOperationCompleted
            End If
            Me.InvokeAsync("GetNotUserMapAuthorizeGroup", New Object() {name}, Me.GetNotUserMapAuthorizeGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNotUserMapAuthorizeGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNotUserMapAuthorizeGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNotUserMapAuthorizeGroupCompleted(Me, New GetNotUserMapAuthorizeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadUserAll2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadUserAll2() As String
            Dim results() As Object = Me.Invoke("LoadUserAll2", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadUserAll2Async()
            Me.LoadUserAll2Async(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadUserAll2Async(ByVal userState As Object)
            If (Me.LoadUserAll2OperationCompleted Is Nothing) Then
                Me.LoadUserAll2OperationCompleted = AddressOf Me.OnLoadUserAll2OperationCompleted
            End If
            Me.InvokeAsync("LoadUserAll2", New Object(-1) {}, Me.LoadUserAll2OperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadUserAll2OperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadUserAll2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadUserAll2Completed(Me, New LoadUserAll2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadGroupPermissionAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadGroupPermissionAll() As String
            Dim results() As Object = Me.Invoke("LoadGroupPermissionAll", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadGroupPermissionAllAsync()
            Me.LoadGroupPermissionAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadGroupPermissionAllAsync(ByVal userState As Object)
            If (Me.LoadGroupPermissionAllOperationCompleted Is Nothing) Then
                Me.LoadGroupPermissionAllOperationCompleted = AddressOf Me.OnLoadGroupPermissionAllOperationCompleted
            End If
            Me.InvokeAsync("LoadGroupPermissionAll", New Object(-1) {}, Me.LoadGroupPermissionAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadGroupPermissionAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadGroupPermissionAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadGroupPermissionAllCompleted(Me, New LoadGroupPermissionAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAuthorizeGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveAuthorizeGroup(ByVal strId As String, ByVal groupid As String, ByVal userid As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveAuthorizeGroup", New Object() {strId, groupid, userid})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAuthorizeGroupAsync(ByVal strId As String, ByVal groupid As String, ByVal userid As String)
            Me.SaveAuthorizeGroupAsync(strId, groupid, userid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAuthorizeGroupAsync(ByVal strId As String, ByVal groupid As String, ByVal userid As String, ByVal userState As Object)
            If (Me.SaveAuthorizeGroupOperationCompleted Is Nothing) Then
                Me.SaveAuthorizeGroupOperationCompleted = AddressOf Me.OnSaveAuthorizeGroupOperationCompleted
            End If
            Me.InvokeAsync("SaveAuthorizeGroup", New Object() {strId, groupid, userid}, Me.SaveAuthorizeGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveAuthorizeGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveAuthorizeGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveAuthorizeGroupCompleted(Me, New SaveAuthorizeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveGroup(ByVal id As String, ByVal group_name As String, ByVal group_desc As String, ByVal userid As String, ByVal active As String) As String
            Dim results() As Object = Me.Invoke("SaveGroup", New Object() {id, group_name, group_desc, userid, active})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveGroupAsync(ByVal id As String, ByVal group_name As String, ByVal group_desc As String, ByVal userid As String, ByVal active As String)
            Me.SaveGroupAsync(id, group_name, group_desc, userid, active, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveGroupAsync(ByVal id As String, ByVal group_name As String, ByVal group_desc As String, ByVal userid As String, ByVal active As String, ByVal userState As Object)
            If (Me.SaveGroupOperationCompleted Is Nothing) Then
                Me.SaveGroupOperationCompleted = AddressOf Me.OnSaveGroupOperationCompleted
            End If
            Me.InvokeAsync("SaveGroup", New Object() {id, group_name, group_desc, userid, active}, Me.SaveGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveGroupCompleted(Me, New SaveGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveGroupUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveGroupUser(ByVal id As String, ByVal groupid As String, ByVal userid As String) As String
            Dim results() As Object = Me.Invoke("SaveGroupUser", New Object() {id, groupid, userid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveGroupUserAsync(ByVal id As String, ByVal groupid As String, ByVal userid As String)
            Me.SaveGroupUserAsync(id, groupid, userid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveGroupUserAsync(ByVal id As String, ByVal groupid As String, ByVal userid As String, ByVal userState As Object)
            If (Me.SaveGroupUserOperationCompleted Is Nothing) Then
                Me.SaveGroupUserOperationCompleted = AddressOf Me.OnSaveGroupUserOperationCompleted
            End If
            Me.InvokeAsync("SaveGroupUser", New Object() {id, groupid, userid}, Me.SaveGroupUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveGroupUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveGroupUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveGroupUserCompleted(Me, New SaveGroupUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteGroup(ByVal id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteGroup", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteGroupAsync(ByVal id As String)
            Me.DeleteGroupAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteGroupAsync(ByVal id As String, ByVal userState As Object)
            If (Me.DeleteGroupOperationCompleted Is Nothing) Then
                Me.DeleteGroupOperationCompleted = AddressOf Me.OnDeleteGroupOperationCompleted
            End If
            Me.InvokeAsync("DeleteGroup", New Object() {id}, Me.DeleteGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteGroupCompleted(Me, New DeleteGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteGroupUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteGroupUser(ByVal id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteGroupUser", New Object() {id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteGroupUserAsync(ByVal id As String)
            Me.DeleteGroupUserAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteGroupUserAsync(ByVal id As String, ByVal userState As Object)
            If (Me.DeleteGroupUserOperationCompleted Is Nothing) Then
                Me.DeleteGroupUserOperationCompleted = AddressOf Me.OnDeleteGroupUserOperationCompleted
            End If
            Me.InvokeAsync("DeleteGroupUser", New Object() {id}, Me.DeleteGroupUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteGroupUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteGroupUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteGroupUserCompleted(Me, New DeleteGroupUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAuthorizeGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadAuthorizeGroup(ByVal groupid As String) As String
            Dim results() As Object = Me.Invoke("LoadAuthorizeGroup", New Object() {groupid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadAuthorizeGroupAsync(ByVal groupid As String)
            Me.LoadAuthorizeGroupAsync(groupid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadAuthorizeGroupAsync(ByVal groupid As String, ByVal userState As Object)
            If (Me.LoadAuthorizeGroupOperationCompleted Is Nothing) Then
                Me.LoadAuthorizeGroupOperationCompleted = AddressOf Me.OnLoadAuthorizeGroupOperationCompleted
            End If
            Me.InvokeAsync("LoadAuthorizeGroup", New Object() {groupid}, Me.LoadAuthorizeGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadAuthorizeGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadAuthorizeGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadAuthorizeGroupCompleted(Me, New LoadAuthorizeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuthorizeGroupMap", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAuthorizeGroupMap(ByVal groupid As String) As String
            Dim results() As Object = Me.Invoke("GetAuthorizeGroupMap", New Object() {groupid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAuthorizeGroupMapAsync(ByVal groupid As String)
            Me.GetAuthorizeGroupMapAsync(groupid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAuthorizeGroupMapAsync(ByVal groupid As String, ByVal userState As Object)
            If (Me.GetAuthorizeGroupMapOperationCompleted Is Nothing) Then
                Me.GetAuthorizeGroupMapOperationCompleted = AddressOf Me.OnGetAuthorizeGroupMapOperationCompleted
            End If
            Me.InvokeAsync("GetAuthorizeGroupMap", New Object() {groupid}, Me.GetAuthorizeGroupMapOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAuthorizeGroupMapOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAuthorizeGroupMapCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAuthorizeGroupMapCompleted(Me, New GetAuthorizeGroupMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub CheckAuthorizeGroupScreenByUserCompletedEventHandler(ByVal sender As Object, ByVal e As CheckAuthorizeGroupScreenByUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckAuthorizeGroupScreenByUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadAuthorizeGroupMapCompletedEventHandler(ByVal sender As Object, ByVal e As LoadAuthorizeGroupMapCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadAuthorizeGroupMapCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadUserByDepartmentCompletedEventHandler(ByVal sender As Object, ByVal e As LoadUserByDepartmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadUserByDepartmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadUserDeaprtByNameCompletedEventHandler(ByVal sender As Object, ByVal e As LoadUserDeaprtByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadUserDeaprtByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadMapGridDesktopAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadMapGridDesktopAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadMapGridDesktopAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetImageFloorPlanCompletedEventHandler(ByVal sender As Object, ByVal e As GetImageFloorPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetImageFloorPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadFloorPlanByFloorAndRoomCompletedEventHandler(ByVal sender As Object, ByVal e As LoadFloorPlanByFloorAndRoomCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadFloorPlanByFloorAndRoomCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadGridLayoutActiveCompletedEventHandler(ByVal sender As Object, ByVal e As LoadGridLayoutActiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadGridLayoutActiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetRoomDetailByIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetRoomDetailByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRoomDetailByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveCurrentInRoomCompletedEventHandler(ByVal sender As Object, ByVal e As SaveCurrentInRoomCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveCurrentInRoomCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadOfficerRoomByRoomIdCompletedEventHandler(ByVal sender As Object, ByVal e As LoadOfficerRoomByRoomIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadOfficerRoomByRoomIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadFloorPlanByRoomIdCompletedEventHandler(ByVal sender As Object, ByVal e As LoadFloorPlanByRoomIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadFloorPlanByRoomIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadOfficerMapLayoutByLayoutIdCompletedEventHandler(ByVal sender As Object, ByVal e As LoadOfficerMapLayoutByLayoutIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadOfficerMapLayoutByLayoutIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveMapGridCompletedEventHandler(ByVal sender As Object, ByVal e As SaveMapGridCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveMapGridCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSpeedWayReadAreaAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSpeedWayReadAreaAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSpeedWayReadAreaAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSpeedWayByRoomIdCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSpeedWayByRoomIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSpeedWayByRoomIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadAntennaBySpeedwayCompletedEventHandler(ByVal sender As Object, ByVal e As LoadAntennaBySpeedwayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadAntennaBySpeedwayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadAttenaMapLayoutByPortCompletedEventHandler(ByVal sender As Object, ByVal e As LoadAttenaMapLayoutByPortCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadAttenaMapLayoutByPortCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadAntennaPlanByRoomIdCompletedEventHandler(ByVal sender As Object, ByVal e As LoadAntennaPlanByRoomIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadAntennaPlanByRoomIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveMapAntennaCompletedEventHandler(ByVal sender As Object, ByVal e As SaveMapAntennaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveMapAntennaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSysConfigCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSysConfigCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSysConfigCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveSysconfigCompletedEventHandler(ByVal sender As Object, ByVal e As SaveSysconfigCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveSysconfigCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadDesktopAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadDesktopAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadDesktopAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetDesktopByIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetDesktopByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDesktopByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveDesktopCompletedEventHandler(ByVal sender As Object, ByVal e As SaveDesktopCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveDesktopCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeleteDesktopCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteDesktopCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteDesktopCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadDepartmentCompletedEventHandler(ByVal sender As Object, ByVal e As LoadDepartmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadDepartmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadDepartmentByUserCompletedEventHandler(ByVal sender As Object, ByVal e As LoadDepartmentByUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadDepartmentByUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSinageScheduleAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSinageScheduleAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSinageScheduleAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSinageScheduleIDCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSinageScheduleIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSinageScheduleIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadMonthByDigitalSinageTemplateScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As LoadMonthByDigitalSinageTemplateScheduleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadMonthByDigitalSinageTemplateScheduleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadDayByDigitalSinageTemplateScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As LoadDayByDigitalSinageTemplateScheduleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadDayByDigitalSinageTemplateScheduleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSinageScheduleDailyByTemplateIDCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSinageScheduleDailyByTemplateIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSinageScheduleDailyByTemplateIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSinageScheduleWeeklyByTemplateIDCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSinageScheduleWeeklyByTemplateIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSinageScheduleWeeklyByTemplateIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSinageScheduleTimeByTemplateIDCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSinageScheduleTimeByTemplateIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSinageScheduleTimeByTemplateIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveSinageScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As SaveSinageScheduleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveSinageScheduleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeleteSinageScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteSinageScheduleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteSinageScheduleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadFloorAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadFloorAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadFloorAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadFloorByFloorPlanCompletedEventHandler(ByVal sender As Object, ByVal e As LoadFloorByFloorPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadFloorByFloorPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadFloorByDesktopCompletedEventHandler(ByVal sender As Object, ByVal e As LoadFloorByDesktopCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadFloorByDesktopCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadFloorBySpeedwayCompletedEventHandler(ByVal sender As Object, ByVal e As LoadFloorBySpeedwayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadFloorBySpeedwayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadFloorByLEDTVCompletedEventHandler(ByVal sender As Object, ByVal e As LoadFloorByLEDTVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadFloorByLEDTVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadFloorPlanAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadFloorPlanAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadFloorPlanAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetFloorPlanByIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetFloorPlanByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFloorPlanByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveFloorPlanCompletedEventHandler(ByVal sender As Object, ByVal e As SaveFloorPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveFloorPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeleteFloorPlanCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteFloorPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteFloorPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadGridLayoutAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadGridLayoutAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadGridLayoutAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetGridLayoutByIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetGridLayoutByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGridLayoutByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveGridLayoutCompletedEventHandler(ByVal sender As Object, ByVal e As SaveGridLayoutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveGridLayoutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeleteGridLayoutCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteGridLayoutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteGridLayoutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadLEDTVAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadLEDTVAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadLEDTVAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadLEDTVIDCompletedEventHandler(ByVal sender As Object, ByVal e As LoadLEDTVIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadLEDTVIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveLEDTVCompletedEventHandler(ByVal sender As Object, ByVal e As SaveLEDTVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveLEDTVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeleteLEDTVCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteLEDTVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteLEDTVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadLEDTVBySinageScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As LoadLEDTVBySinageScheduleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadLEDTVBySinageScheduleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadLEDTVIDBySinageContentCompletedEventHandler(ByVal sender As Object, ByVal e As LoadLEDTVIDBySinageContentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadLEDTVIDBySinageContentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadObjectveBySpeedwayCompletedEventHandler(ByVal sender As Object, ByVal e As LoadObjectveBySpeedwayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadObjectveBySpeedwayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadPatentTypeAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadPatentTypeAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadPatentTypeAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetPatentTypeByIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetPatentTypeByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPatentTypeByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SavePatentTypeCompletedEventHandler(ByVal sender As Object, ByVal e As SavePatentTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SavePatentTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeletePatentTypeCompletedEventHandler(ByVal sender As Object, ByVal e As DeletePatentTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeletePatentTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadPositionCompletedEventHandler(ByVal sender As Object, ByVal e As LoadPositionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadPositionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadPositionByUserCompletedEventHandler(ByVal sender As Object, ByVal e As LoadPositionByUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadPositionByUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadTitleAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadTitleAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadTitleAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadTitleByUserCompletedEventHandler(ByVal sender As Object, ByVal e As LoadTitleByUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadTitleByUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadRoomAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadRoomAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadRoomAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadRoomByFloorPlanCompletedEventHandler(ByVal sender As Object, ByVal e As LoadRoomByFloorPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadRoomByFloorPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadRoomByDesktopCompletedEventHandler(ByVal sender As Object, ByVal e As LoadRoomByDesktopCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadRoomByDesktopCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadRoomByFloorCompletedEventHandler(ByVal sender As Object, ByVal e As LoadRoomByFloorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadRoomByFloorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadRoomBySpeedwayCompletedEventHandler(ByVal sender As Object, ByVal e As LoadRoomBySpeedwayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadRoomBySpeedwayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadUserAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadUserAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadUserAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadUserByNameCompletedEventHandler(ByVal sender As Object, ByVal e As LoadUserByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadUserByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetUserByIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveUserCompletedEventHandler(ByVal sender As Object, ByVal e As SaveUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeleteUserCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSignageContentByLEDTVCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSignageContentByLEDTVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSignageContentByLEDTVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSignageContentBySignageScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSignageContentBySignageScheduleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSignageContentBySignageScheduleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSpeedwayAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSpeedwayAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSpeedwayAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSpeedwayByIDCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSpeedwayByIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSpeedwayByIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveSpeedwayCompletedEventHandler(ByVal sender As Object, ByVal e As SaveSpeedwayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveSpeedwayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetSpeedwayDefaultMaxGPICompletedEventHandler(ByVal sender As Object, ByVal e As GetSpeedwayDefaultMaxGPICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSpeedwayDefaultMaxGPICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetSpeedwayDefaultMaxAntCompletedEventHandler(ByVal sender As Object, ByVal e As GetSpeedwayDefaultMaxAntCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSpeedwayDefaultMaxAntCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeleteSpeedwayCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteSpeedwayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteSpeedwayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSearchModeCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSearchModeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSearchModeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadFilterModeCompletedEventHandler(ByVal sender As Object, ByVal e As LoadFilterModeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadFilterModeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadReportModeCompletedEventHandler(ByVal sender As Object, ByVal e As LoadReportModeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadReportModeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadAutoStartModeCompletedEventHandler(ByVal sender As Object, ByVal e As LoadAutoStartModeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadAutoStartModeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadGPILevelCompletedEventHandler(ByVal sender As Object, ByVal e As LoadGPILevelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadGPILevelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadAutoStopModeCompletedEventHandler(ByVal sender As Object, ByVal e As LoadAutoStopModeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadAutoStopModeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadMemoryBankCompletedEventHandler(ByVal sender As Object, ByVal e As LoadMemoryBankCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadMemoryBankCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadFilterOpCompletedEventHandler(ByVal sender As Object, ByVal e As LoadFilterOpCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadFilterOpCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSpeedwayAntennaCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSpeedwayAntennaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSpeedwayAntennaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSpeedwayGPICompletedEventHandler(ByVal sender As Object, ByVal e As LoadSpeedwayGPICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSpeedwayGPICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadSpeedwayTagFilterCompletedEventHandler(ByVal sender As Object, ByVal e As LoadSpeedwayTagFilterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadSpeedwayTagFilterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetUserMapAuthorizeGroupCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserMapAuthorizeGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserMapAuthorizeGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetNotUserMapAuthorizeGroupCompletedEventHandler(ByVal sender As Object, ByVal e As GetNotUserMapAuthorizeGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNotUserMapAuthorizeGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadUserAll2CompletedEventHandler(ByVal sender As Object, ByVal e As LoadUserAll2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadUserAll2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadGroupPermissionAllCompletedEventHandler(ByVal sender As Object, ByVal e As LoadGroupPermissionAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadGroupPermissionAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveAuthorizeGroupCompletedEventHandler(ByVal sender As Object, ByVal e As SaveAuthorizeGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveAuthorizeGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveGroupCompletedEventHandler(ByVal sender As Object, ByVal e As SaveGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub SaveGroupUserCompletedEventHandler(ByVal sender As Object, ByVal e As SaveGroupUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveGroupUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeleteGroupCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub DeleteGroupUserCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteGroupUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteGroupUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub LoadAuthorizeGroupCompletedEventHandler(ByVal sender As Object, ByVal e As LoadAuthorizeGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadAuthorizeGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")>  _
    Public Delegate Sub GetAuthorizeGroupMapCompletedEventHandler(ByVal sender As Object, ByVal e As GetAuthorizeGroupMapCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAuthorizeGroupMapCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
